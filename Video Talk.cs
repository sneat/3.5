/* -LICENSE-START-
** Copyright (c) 2011 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Windows.Forms.Design;
using System.Runtime.InteropServices;
using System.Timers;
using System.Net.Sockets;
using System.Windows.Forms.VisualStyles;
using BMDSwitcherAPI;

namespace BMDGLC
{
    public partial class Video : Form
    {
        IBMDSwitcherKeyIterator keyIterator;
        IBMDSwitcherMediaPlayer mediaplayer1, mediaplayer2;
        IBMDSwitcherMediaPlayerIterator mediaiterator;
        BMDGLC.Lights lights = new BMDGLC.Lights();
        BMDGLC.Password pass = new BMDGLC.Password();
        IBMDSwitcherInputAux FAUX1, FAUX2, FAUX3;
        IBMDSwitcherDiscovery m_switcherDiscovery;
        IBMDSwitcher m_switcher;
        IBMDSwitcherMixEffectBlock m_mixEffectBlock1;
        IBMDSwitcherKey me1_key1, me1_key2, me1_key3, me1_key4;
        SwitcherMonitor m_switcherMonitor;
        MixEffectBlockMonitor m_mixEffectBlockMonitor;
        System.Timers.Timer returntostartup = new System.Timers.Timer();
        System.Timers.Timer timerlumaon = new System.Timers.Timer();
        System.Timers.Timer timerlumaon3 = new System.Timers.Timer();
        System.Timers.Timer updateauxtimer = new System.Timers.Timer();
        System.Timers.Timer updateblinktimer = new System.Timers.Timer();
        System.Timers.Timer timervid = new System.Timers.Timer();
        System.Timers.Timer clock = new System.Timers.Timer();
        int theater9open;
        int keyerstate;
        private List<InputMonitor> m_inputMonitors = new List<InputMonitor>();

        public void updateclock()
        {
            label1.Text = DateTime.Now.ToLongTimeString();                                           
        }

        public void Program_Black()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 0);
        }

        public void Program_HDMI1()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 1);
        }

        public void Program_HDMI2()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 2);
        }

        public void Program_HDMI3()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 3);
        }

        public void Program_HDMI4()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 4);
        }

        public void Program_Cam1()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 5);
        }

        public void Program_Cam2()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 6);
        }

        public void Program_Cam3()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 7);
        }

        public void Program_Cam4()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 8);
        }

        public void Program_ColorBars()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 9);
        }

        public void Preview_Black()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 0);
        }

        public void Preview_HDMI1()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 1);
        }

        public void Preview_HDMI2()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 2);
        }

        public void Preview_HDMI3()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 3);
        }

        public void Preview_HDMI4()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 4);
        }

        public void Preview_Cam1()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 5);
        }

        public void Preview_Cam2()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 6);
        }

        public void Preview_Cam3()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 7);
        }

        public void Preview_Cam4()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 8);
        }

        public void Preview_ColorBars()
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 9);
        }
        
        public void LumaOn()
        {
            int keyerstate;
            me1_key1.GetOnAir(out keyerstate);
            if (keyerstate == 1)
            { }
            if (keyerstate == 0)
            {
                me1_key1.SetOnAir(1);
            }
            
        }

        public void LumaOff()
        {
            me1_key1.SetOnAir(0);
        }
        
        public void DrawVisualStyleElementTrackBarThumbRight1(PaintEventArgs e)
        {


            if (VisualStyleRenderer.IsElementDefined(
                VisualStyleElement.TrackBar.ThumbRight.Normal))
            {
                VisualStyleRenderer renderer =
                     new VisualStyleRenderer(VisualStyleElement.TrackBar.ThumbRight.Normal);
                Rectangle rectangle1 = new Rectangle(10, 50, 50, 50);
                renderer.DrawBackground(e.Graphics, rectangle1);
                e.Graphics.DrawString("VisualStyleElement.TrackBar.ThumbRight.Normal",
                     this.Font, Brushes.Black, new Point(10, 10));
            }
            else
                e.Graphics.DrawString("This element is not defined in the current visual style.",
                     this.Font, Brushes.Black, new Point(10, 10));
        }

        public void return_elapsed()
        {
            returntostartup.Stop();
            SwitcherDisconnected();
            BMDGLC.Startup startup = new BMDGLC.Startup();
            startup.Show();
            this.Close();
        }

        public Video()
        {
            InitializeComponent();
            returntostartup.Interval = (1500);
            returntostartup.Elapsed += new ElapsedEventHandler((s, a) => this.Invoke((Action)(() => return_elapsed())));
            m_switcherMonitor = new SwitcherMonitor();
            // note: this invoke pattern ensures our callback is called in the main thread. We are making double
            // use of lambda expressions here to achieve this.
            // Essentially, the events will arrive at the callback class (implemented by our monitor classes)
            // on a separate thread. We must marshell these to the main thread, and we're doing this by calling
            // invoke on the Windows Forms object. The lambda expression is just a simplification.
            m_switcherMonitor.SwitcherDisconnected += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => SwitcherDisconnected())));
            clock.Interval = (1);
            clock.Start();
            clock.Elapsed += new ElapsedEventHandler((s, a) =>  this.Invoke((Action)(() => updateclock())));
            m_mixEffectBlockMonitor = new MixEffectBlockMonitor();
            m_switcherDiscovery = new CBMDSwitcherDiscovery();
            if (m_switcherDiscovery == null)
            {
                MessageBox.Show("Could not create Switcher Discovery Instance.\nATEM Switcher Software may not be installed.", "Error");
                Environment.Exit(1);
            }

            SwitcherDisconnected();		// start with switcher disconnected
        }

        public void SwitcherConnected()
        {
            
            // Get the switcher name:
            string switcherName;
            m_switcher.GetString(_BMDSwitcherPropertyId.bmdSwitcherPropertyIdProductName, out switcherName);
            
            // Install SwitcherMonitor callbacks:
            m_switcher.AddCallback(m_switcherMonitor);

            // We create input monitors for each input. To do this we iterator over all inputs:
            // This will allow us to update the combo boxes when input names change:
            IBMDSwitcherInputIterator inputIterator;
            if (SwitcherAPIHelper.CreateIterator(m_switcher, out inputIterator))
            {
                IBMDSwitcherInput input;
                inputIterator.Next(out input);
                while (input != null)
                {
                    InputMonitor newInputMonitor = new InputMonitor(input);
                    input.AddCallback(newInputMonitor);
                    

                    m_inputMonitors.Add(newInputMonitor);

                    inputIterator.Next(out input);
                    foreach (Control c in Controls)
                    {
                        c.Enabled = true;
                    }
                    btn_reconnect.Enabled = false;
                    aux1ToolStripMenuItem.Enabled = true;
                    aux2ToolStripMenuItem.Enabled = true;
                    aux3ToolStripMenuItem.Enabled = true;
                    
                }
                timervid.Interval = (1100);
                timerlumaon.Interval = (1000);
                timerlumaon3.Interval = (3000);
                updateauxtimer.Interval = (300);
                updateblinktimer.Start();
                timervid.Elapsed += new ElapsedEventHandler((s, a) => this.Invoke((Action)(() => timervid_tick())));
                updateauxtimer.Elapsed += new ElapsedEventHandler((s, a) => this.Invoke((Action)(() => updateaux_tick()))); // Everytime timer ticks, timer_Tick will be called
                updateblinktimer.Interval = (150);
                updateblinktimer.Elapsed += new ElapsedEventHandler((s, a) => this.Invoke((Action)(() => updateblink_tick()))); // Everytime timer ticks, timer_Tick will be called
                timerlumaon.Elapsed += new ElapsedEventHandler((s, a) => this.Invoke((Action)(() => timerlumaon_Tick()))); // Everytime timer ticks, timer_Tick will be called
                timerlumaon3.Elapsed += new ElapsedEventHandler((s, a) => this.Invoke((Action)(() => timerlumaon3_Tick()))); // Everytime timer ticks, timer_Tick will be called
                }


            // We want to get the first Mix Effect block (ME 1). We create a ME iterator,
            // and then get the first one:
            m_mixEffectBlock1 = null;
            IBMDSwitcherMixEffectBlockIterator meIterator;
            SwitcherAPIHelper.CreateIterator(m_switcher, out meIterator);

            if (meIterator != null)
            {
                meIterator.Next(out m_mixEffectBlock1);
            }

            if (m_mixEffectBlock1 == null)
            {
                MessageBox.Show("Unexpected: Could not get first mix effect block", "Error");
                return;
            }

            // Install MixEffectBlockMonitor callbacks:
            m_mixEffectBlock1.AddCallback(m_mixEffectBlockMonitor);

            buttonnormal();
            updateauxtimer.Start();
        }

        private void SwitcherDisconnected()
        {
            // Remove all input monitors, remove callbacks
            foreach (InputMonitor inputMon in m_inputMonitors)
            {
                inputMon.Input.RemoveCallback(inputMon);
                
            }
            m_inputMonitors.Clear();

            if (m_mixEffectBlock1 != null)
            {
                // Remove callback
                m_mixEffectBlock1.RemoveCallback(m_mixEffectBlockMonitor);

                // Release reference
                m_mixEffectBlock1 = null;
            }

            if (m_switcher != null)
            {
                // Remove callback:
                m_switcher.RemoveCallback(m_switcherMonitor);

                // release reference:
                m_switcher = null;
            }
            foreach (Control c in Controls)
            {
                c.Enabled = false;
            }
            aux1ToolStripMenuItem.Enabled = false;
            aux2ToolStripMenuItem.Enabled = false;
            aux3ToolStripMenuItem.Enabled = false;
            menuStrip1.Enabled = true;
            btn_reconnect.Enabled = true;
            timerlumaon.Enabled = false;
            timerlumaon3.Enabled = false;
            updateauxtimer.Enabled = false;
            updateblinktimer.Enabled = false;
            groupBox4.Enabled = true;
            buttonX1.Enabled = true;
            btn_t8ready.Enabled = true;
            btn_t9ready.Enabled = true;
            btn_t10ready.Enabled = true;
            t8banddone.Enabled = true;
            t9banddone.Enabled = true;
            t10banddone.Enabled = true;
        }
       
        public void SwitcherPanel_Load(object sender, EventArgs e)
        {
            string version = System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString();
            this.Text = "GLC Video Control ," + version;
            if (DateTime.Now.Hour == 9)
            {
                theater9open = 0;
            }
                firstconnect();
        }

        public void firstconnect()
        {
            btn_t8ready.BackColor = Color.Red;
            btn_t9ready.BackColor = Color.Red;
            btn_t10ready.BackColor = Color.Red;
            t8banddone.BackColor = Color.Red;
            t9banddone.BackColor = Color.Red;
            t10banddone.BackColor = Color.Red;

            _BMDSwitcherConnectToFailure failReason = 0;
            string address = "192.168.1.100";

            try
            {
                // Note that ConnectTo() can take several seconds to return, both for success or failure,
                // depending upon hostname resolution and network response times, so it may be best to
                // do this in a separate thread to prevent the main GUI thread blocking.
                m_switcherDiscovery.ConnectTo(address, out m_switcher, out failReason);
            }
            catch (COMException)
            {
                // An exception will be thrown if ConnectTo fails. For more information, see failReason.
                switch (failReason)
                {
                    case _BMDSwitcherConnectToFailure.bmdSwitcherConnectToFailureNoResponse:
                        MessageBox.Show("No response from Switcher", "Error");
                        break;
                    case _BMDSwitcherConnectToFailure.bmdSwitcherConnectToFailureIncompatibleFirmware:
                        MessageBox.Show("Switcher has incompatible firmware", "Error");
                        break;
                    default:
                        MessageBox.Show("Connection failed for unknown reason", "Error");
                        break;
                }
                return;
            }



            SwitcherConnected();


            
            //media manager

            SwitcherAPIHelper.CreateIterator(m_switcher, out mediaiterator);
            if (mediaiterator != null)
            {
                mediaiterator.Next(out mediaplayer1);
                mediaiterator.Next(out mediaplayer2);
            }

           
            


            // ME-1 Key 1

            SwitcherAPIHelper.CreateIterator(m_mixEffectBlock1, out keyIterator);
            if (keyIterator != null)
            {
                keyIterator.Next(out me1_key1);
                keyIterator.Next(out me1_key2);
                keyIterator.Next(out me1_key3);
                keyIterator.Next(out me1_key4);

            }
            IntPtr lvPointer;
            IBMDSwitcherInputIterator lvInputIterator;
            IBMDSwitcherInput lvInput;
            string lvPortName;
            IBMDSwitcherInputAux lvAUX;
            long lvPortType;
            int lvAUXCount;
            lvAUXCount = 0;
            m_switcher.CreateIterator(typeof(IBMDSwitcherInputIterator).GUID, out lvPointer);
            lvInputIterator = (IBMDSwitcherInputIterator)Marshal.GetObjectForIUnknown(lvPointer);
            lvInputIterator.Next(out lvInput);
            while (lvInput != null)
            {
                lvInput.GetString(BMDSwitcherAPI._BMDSwitcherInputPropertyId.bmdSwitcherInputPropertyIdLongName, out lvPortName); // bmdSwitcherInputPropertyIdLongName

                

                lvInput.GetInt(BMDSwitcherAPI._BMDSwitcherInputPropertyId.bmdSwitcherInputPropertyIdPortType, out lvPortType);

                if ((_BMDSwitcherPortType)lvPortType == BMDSwitcherAPI._BMDSwitcherPortType.bmdSwitcherPortTypeMixEffectBlockOutput)
                {

                }

                if ((_BMDSwitcherPortType)lvPortType == BMDSwitcherAPI._BMDSwitcherPortType.bmdSwitcherPortTypeAuxOutput)
                {
                    lvAUXCount = lvAUXCount + 1;

                    lvAUX = (IBMDSwitcherInputAux)lvInput;

                    if (lvAUXCount == 1)
                    {
                        FAUX1 = lvAUX;
                    }
                    if (lvAUXCount == 2)
                    {
                        FAUX2 = lvAUX;
                    }
                    if (lvAUXCount == 3)
                    {
                        FAUX3 = lvAUX;
                    }



                }
                lvInputIterator.Next(out lvInput);


            }

            int KeyerState;
            me1_key1.GetOnAir(out KeyerState);
            if (KeyerState == 1)
            {
                btnKey1Air.BackColor = System.Drawing.Color.Green;
                btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else
            {
                btnKey1Air.BackColor = System.Drawing.Color.Red;
                btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            }
            
        }

        public void updateblink_tick()
        {
            me1_key1.GetOnAir(out keyerstate);
            if (btn_precount.BackColor == Color.Green)
            {
                if (keyerstate == 1)
                {
                    btnKey1Air.BackColor = SystemColors.Control;
                    btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
                }
            }
            if (btn_worship.BackColor == Color.Green)
            {
                if (keyerstate == 0)
                {
                    btnKey1Air.BackColor = SystemColors.Control;
                    btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
                }
            }
            if (btn_rollin.BackColor == Color.Green)
            {
                if (keyerstate == 1)
                {
                    btnKey1Air.BackColor = SystemColors.Control;
                    btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
                }
            }
            
            if (btn_LastSong.BackColor == Color.Green)
            {
                if (keyerstate == 1)
                {
                    btnKey1Air.BackColor = SystemColors.Control;
                    btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
                }
            }
            if (btn_Done.BackColor == Color.Green)
            {
                if (keyerstate == 1)
                {
                    btnKey1Air.BackColor = SystemColors.Control;
                    btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
                }
            }
            
            
            updateblinktimer.Enabled = false;
        }
        public void updateaux_tick()
        {
            if (theater9open == 1)
            {
                theater9OpenToolStripMenuItem.Image = ((System.Drawing.Image)(BMDGLC.Properties.Resources.checkmark));
            }
            else if (theater9open == 0)
            {
                theater9OpenToolStripMenuItem.Image = ((System.Drawing.Image)(BMDGLC.Properties.Resources.redx));
            }

            int keyerstate2;
            me1_key2.GetOnAir(out keyerstate2);
            if (keyerstate2 == 1)
            {
                btnKey2Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (keyerstate2 == 0)
            {
                btnKey2Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            }
           
            Colornorm();
            if (btn_action.BackColor == SystemColors.Control)
            { 
                btn_action.BackColor = Color.Yellow;
                btn_action.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonyellow));
            }
            else 
            { 
                btn_action.BackColor = SystemColors.Control;
                btn_action.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            }
            long programId;
            m_mixEffectBlock1.GetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, out programId);
            long previewId;
            m_mixEffectBlock1.GetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, out previewId);

            blackToolStripMenuItem.BackColor = SystemColors.Control;
            hDMI1ToolStripMenuItem.BackColor = SystemColors.Control;
            hDMI2ToolStripMenuItem.BackColor = SystemColors.Control;
            hDMI3ToolStripMenuItem.BackColor = SystemColors.Control;
            hDMI4ToolStripMenuItem.BackColor = SystemColors.Control;
            camera1ToolStripMenuItem.BackColor = SystemColors.Control;
            camera2ToolStripMenuItem.BackColor = SystemColors.Control;
            camera3ToolStripMenuItem.BackColor = SystemColors.Control;
            camera4ToolStripMenuItem.BackColor = SystemColors.Control;
            programToolStripMenuItem.BackColor = SystemColors.Control;

            blackToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            programToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            long aux1input;
            FAUX1.GetSource(out aux1input);

            if (aux1input == 0)
            {
                blackToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 1)
            {
                hDMI1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 2)
            {
                hDMI2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 3)
            {
                hDMI3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 4)
            {
                hDMI4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 5)
            {
                camera1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 6)
            {
                camera2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 7)
            {
                camera3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 8)
            {
                camera4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux1input == 16)
            {
                programToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }

            blackToolStripMenuItem1.BackColor = SystemColors.Control;
            hDMI1ToolStripMenuItem1.BackColor = SystemColors.Control;
            hDMI2ToolStripMenuItem1.BackColor = SystemColors.Control;
            hDMI3ToolStripMenuItem1.BackColor = SystemColors.Control;
            hDMI4ToolStripMenuItem1.BackColor = SystemColors.Control;
            camera1ToolStripMenuItem1.BackColor = SystemColors.Control;
            camera2ToolStripMenuItem1.BackColor = SystemColors.Control;
            camera3ToolStripMenuItem1.BackColor = SystemColors.Control;
            camera4ToolStripMenuItem1.BackColor = SystemColors.Control;
            programToolStripMenuItem1.BackColor = SystemColors.Control;

            blackToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            programToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            long aux2input;
            FAUX2.GetSource(out aux2input);

            if (aux2input == 0)
            {
                blackToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 1)
            {
                hDMI1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 2)
            {
                hDMI2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 3)
            {
                hDMI3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 4)
            {
                hDMI4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 5)
            {
                camera1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 6)
            {
                camera2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 7)
            {
                camera3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 8)
            {
                camera4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux2input == 16)
            {
                programToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            
            blackToolStripMenuItem2.BackColor = SystemColors.Control;
            hDMI1ToolStripMenuItem2.BackColor = SystemColors.Control;
            hDMI2ToolStripMenuItem2.BackColor = SystemColors.Control;
            hDMI3ToolStripMenuItem2.BackColor = SystemColors.Control;
            hDMI4ToolStripMenuItem2.BackColor = SystemColors.Control;
            camera1ToolStripMenuItem2.BackColor = SystemColors.Control;
            camera2ToolStripMenuItem2.BackColor = SystemColors.Control;
            camera3ToolStripMenuItem2.BackColor = SystemColors.Control;
            camera4ToolStripMenuItem2.BackColor = SystemColors.Control;
            programToolStripMenuItem2.BackColor = SystemColors.Control;
            
            blackToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            programToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            long aux3input;
            FAUX3.GetSource(out aux3input);

            if (aux3input == 0)
            {
                blackToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 1)
            {
                hDMI1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 2)
            {
                hDMI2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 3)
            {
                hDMI3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 4)
            {
                hDMI4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 5)
            {
                camera1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 6)
            {
                camera2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 7)
            {
                camera3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 8)
            {
                camera4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            else if (aux3input == 16)
            {
                programToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            int keyerstate;
            me1_key1.GetOnAir(out keyerstate);
            if (keyerstate == 0)
            {
                btnKey1Air.BackColor = Color.Red;
                btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            }
            else if (keyerstate == 1)
            {
                btnKey1Air.BackColor = Color.Green;
                btnKey1Air.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            }
            if (programId == 5)
            {
                if (aux1input == 1)
                {
                    if (aux2input == 2)
                    {
                        if (aux3input == 3)
                        {
                            Colornorm();
                            btn_worship.BackColor = Color.Green;
                            btn_worship.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                        }
                    }
                }
            }
            
            if (programId == 4)
            {
                {
                    if (aux1input == 1)
                    {
                        if (aux2input == 4)
                        {
                            if (aux3input == 4)
                            {
                                Colornorm();
                                btn_LastSong.BackColor = Color.Green;
                                btn_LastSong.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                            }
                        }
                    }
                }
            }
            if (programId == 4)
            {
                {
                    if (aux1input == 16)
                    {
                        if (aux2input == 4)
                        {
                            if (aux3input == 4)
                            {
                                Colornorm();
                                btn_Done.BackColor = Color.Green;
                                btn_Done.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                            }
                        }
                    }
                }
            }
            if (programId == 5)
            {
                if (aux1input == 1)
                {
                    if (aux2input == 16)
                    {
                        if (aux3input == 16)
                        {
                            Colornorm();
                            btn_talk.BackColor = Color.Green;
                            btn_talk.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                        }
                    }
                }
            }
            if (programId == 5)
            {
                if (aux1input == 1)
                {
                    if (aux2input == 2)
                    {
                        if (aux3input == 16)
                        {
                            Colornorm();
                            btn_talk.BackColor = Color.Green;
                            btn_talk.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                        }
                    }
                }
            }
            if (programId == 4)
            {
                {
                    if (aux2input == 4)
                    {
                        if (aux3input == 4)
                        {
                            if (aux1input == 4)
                            {
                                Colornorm();
                                btn_precount.BackColor = Color.Green;
                                btn_precount.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                            }
                        }
                    }

                    if (aux2input == 16)
                    {
                        if (aux3input == 16)
                        {
                            if (aux1input == 16)
                            {
                                Colornorm();
                                btn_rollin.BackColor = Color.Green;
                                btn_rollin.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                            }
                        }
                    }
                }
            }

            
                
            
            if (keyerstate == 1)
            {
                textboxluma.Text = "On";
            }
            else if (keyerstate == 0)
            {
                textboxluma.Text = "Off";
            }


            if (programId == 0)
            {
                textboxprogram.Text = "Black";
            }
            else if (programId == 1)
            {
                textboxprogram.Text = "HDMI1";
            }
            else if (programId == 2)
            {
                textboxprogram.Text = "HDMI2";
            }
            else if (programId == 3)
            {
                textboxprogram.Text = "HDMI3";
            }
            else if (programId == 4)
            {
                textboxprogram.Text = "HDMI4";
            }
            else if (programId == 5)
            {
                textboxprogram.Text = "Camera 1";
            }
            else if (programId == 6)
            {
                textboxprogram.Text = "Camera 2";
            }
            else if (programId == 7)
            {
                textboxprogram.Text = "Camera 3";
            }
            else if (programId == 8)
            {
                textboxprogram.Text = "Camera 4";
            }
            else if (programId == 9)
            {
                textboxprogram.Text = "Color Bars";
            }
            else if (programId == 10)
            {
                textboxprogram.Text = "Color 1";
            }
            else if (programId == 11)
            {
                textboxprogram.Text = "Color 2";
            }
            else if (programId == 12)
            {
                textboxprogram.Text = "Media Player 1";
            }
            else if (programId == 13)
            {
                textboxprogram.Text = "Media Player 1 Key";
            }
            else if (programId == 14)
            {
                textboxprogram.Text = "Media Player 2";
            }
            else if (programId == 15)
            {
                textboxprogram.Text = "Media Player 2 Key";
            }
            else if (programId == 16)
            {
                textboxprogram.Text = "Program";
            }
            else if (programId == 17)
            {
                textboxprogram.Text = "Preview";
            }
            else if (programId == 18)
            {
                textboxprogram.Text = "Clean Feed 1";
            }
            else if (programId == 19)
            {
                textboxprogram.Text = "Clean Feed 2";
            }

            if (previewId == 0)
            {
                textboxpreview.Text = "Black";
            }
            else if (previewId == 1)
            {
                textboxpreview.Text = "HDMI1";
            }
            else if (previewId == 2)
            {
                textboxpreview.Text = "HDMI2";
            }
            else if (previewId == 3)
            {
                textboxpreview.Text = "HDMI3";
            }
            else if (previewId == 4)
            {
                textboxpreview.Text = "HDMI4";
            }
            else if (previewId == 5)
            {
                textboxpreview.Text = "Camera 1";
            }
            else if (previewId == 6)
            {
                textboxpreview.Text = "Camera 2";
            }
            else if (previewId == 7)
            {
                textboxpreview.Text = "Camera 3";
            }
            else if (previewId == 8)
            {
                textboxpreview.Text = "Camera 4";
            }
            else if (previewId == 9)
            {
                textboxpreview.Text = "Color Bars";
            }
            else if (previewId == 10)
            {
                textboxpreview.Text = "Color 1";
            }
            else if (previewId == 11)
            {
                textboxpreview.Text = "Color 2";
            }
            else if (previewId == 12)
            {
                textboxpreview.Text = "Media Player 1";
            }
            else if (previewId == 13)
            {
                textboxpreview.Text = "Media Player 1 Key";
            }
            else if (previewId == 14)
            {
                textboxpreview.Text = "Media Player 2";
            }
            else if (previewId == 15)
            {
                textboxpreview.Text = "Media Player 2 Key";
            }
            else if (previewId == 16)
            {
                textboxpreview.Text = "Program";
            }
            else if (previewId == 17)
            {
                textboxpreview.Text = "Preview";
            }
            else if (previewId == 18)
            {
                textboxpreview.Text = "Clean Feed 1";
            }
            else if (previewId == 19)
            {
                textboxpreview.Text = "Clean Feed 2";
            }

            if (aux1input == 0)
            {
                textboxaux1.Text = "Black";
            }
            else if (aux1input == 1)
            {
                textboxaux1.Text = "HDMI1";
            }
            else if (aux1input == 2)
            {
                textboxaux1.Text = "HDMI2";
            }
            else if (aux1input == 3)
            {
                textboxaux1.Text = "HDMI3";
            }
            else if (aux1input == 4)
            {
                textboxaux1.Text = "HDMI4";
            }
            else if (aux1input == 5)
            {
                textboxaux1.Text = "Camera 1";
            }
            else if (aux1input == 6)
            {
                textboxaux1.Text = "Camera 2";
            }
            else if (aux1input == 7)
            {
                textboxaux1.Text = "Camera 3";
            }
            else if (aux1input == 8)
            {
                textboxaux1.Text = "Camera 4";
            }
            else if (aux1input == 9)
            {
                textboxaux1.Text = "Color Bars";
            }
            else if (aux1input == 10)
            {
                textboxaux1.Text = "Color 1";
            }
            else if (aux1input == 11)
            {
                textboxaux1.Text = "Color 2";
            }
            else if (aux1input == 12)
            {
                textboxaux1.Text = "Media Player 1";
            }
            else if (aux1input == 13)
            {
                textboxaux1.Text = "Media Player 1 Key";
            }
            else if (aux1input == 14)
            {
                textboxaux1.Text = "Media Player 2";
            }
            else if (aux1input == 15)
            {
                textboxaux1.Text = "Media Player 2 Key";
            }
            else if (aux1input == 16)
            {
                textboxaux1.Text = "Program";
            }
            else if (aux1input == 17)
            {
                textboxaux1.Text = "Preview";
            }
            else if (aux1input == 18)
            {
                textboxaux1.Text = "Clean Feed 1";
            }
            else if (aux1input == 19)
            {
                textboxaux1.Text = "Clean Feed 2";
            }

            if (aux2input == 0)
            {
                textboxaux2.Text = "Black";
            }
            else if (aux2input == 1)
            {
                textboxaux2.Text = "HDMI1";
            }
            else if (aux2input == 2)
            {
                textboxaux2.Text = "HDMI2";
            }
            else if (aux2input == 3)
            {
                textboxaux2.Text = "HDMI3";
            }
            else if (aux2input == 4)
            {
                textboxaux2.Text = "HDMI4";
            }
            else if (aux2input == 5)
            {
                textboxaux2.Text = "Camera 1";
            }
            else if (aux2input == 6)
            {
                textboxaux2.Text = "Camera 2";
            }
            else if (aux2input == 7)
            {
                textboxaux2.Text = "Camera 3";
            }
            else if (aux2input == 8)
            {
                textboxaux2.Text = "Camera 4";
            }
            else if (aux2input == 9)
            {
                textboxaux2.Text = "Color Bars";
            }
            else if (aux2input == 10)
            {
                textboxaux2.Text = "Color 1";
            }
            else if (aux2input == 11)
            {
                textboxaux2.Text = "Color 2";
            }
            else if (aux2input == 12)
            {
                textboxaux2.Text = "Media Player 1";
            }
            else if (aux2input == 13)
            {
                textboxaux2.Text = "Media Player 1 Key";
            }
            else if (aux2input == 14)
            {
                textboxaux2.Text = "Media Player 2";
            }
            else if (aux2input == 15)
            {
                textboxaux2.Text = "Media Player 2 Key";
            }
            else if (aux2input == 16)
            {
                textboxaux2.Text = "Program";
            }
            else if (aux2input == 17)
            {
                textboxaux2.Text = "Preview";
            }
            else if (aux2input == 18)
            {
                textboxaux2.Text = "Clean Feed 1";
            }
            else if (aux2input == 19)
            {
                textboxaux2.Text = "Clean Feed 2";
            }

            if (aux3input == 0)
            {
                textboxaux3.Text = "Black";
            }
            else if (aux3input == 1)
            {
                textboxaux3.Text = "HDMI1";
            }
            else if (aux3input == 2)
            {
                textboxaux3.Text = "HDMI2";
            }
            else if (aux3input == 3)
            {
                textboxaux3.Text = "HDMI3";
            }
            else if (aux3input == 4)
            {
                textboxaux3.Text = "HDMI4";
            }
            else if (aux3input == 5)
            {
                textboxaux3.Text = "Camera 1";
            }
            else if (aux3input == 6)
            {
                textboxaux3.Text = "Camera 2";
            }
            else if (aux3input == 7)
            {
                textboxaux3.Text = "Camera 3";
            }
            else if (aux3input == 8)
            {
                textboxaux3.Text = "Camera 4";
            }
            else if (aux3input == 9)
            {
                textboxaux3.Text = "Color Bars";
            }
            else if (aux3input == 10)
            {
                textboxaux3.Text = "Color 1";
            }
            else if (aux3input == 11)
            {
                textboxaux3.Text = "Color 2";
            }
            else if (aux3input == 12)
            {
                textboxaux3.Text = "Media Player 1";
            }
            else if (aux3input == 13)
            {
                textboxaux3.Text = "Media Player 1 Key";
            }
            else if (aux3input == 14)
            {
                textboxaux3.Text = "Media Player 2";
            }
            else if (aux3input == 15)
            {
                textboxaux3.Text = "Media Player 2 Key";
            }
            else if (aux3input == 16)
            {
                textboxaux3.Text = "Program";
            }
            else if (aux3input == 17)
            {
                textboxaux3.Text = "Preview";
            }
            else if (aux3input == 18)
            {
                textboxaux3.Text = "Clean Feed 1";
            }
            else if (aux3input == 19)
            {
                textboxaux3.Text = "Clean Feed 2";
            }
            updateblinktimer.Enabled = true;
        }
        
        private void btn_rollin_Click(object sender, EventArgs e)
        {
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t8banddone.BackColor = Color.Red;
            t9banddone.BackColor = Color.Red;
            t10banddone.BackColor = Color.Red; 
            lights.alllightsoff();
            LumaOff();
            Preview_HDMI4();
            FAUX1.SetSource(16);
            FAUX2.SetSource(16);
            FAUX3.SetSource(16);
            m_mixEffectBlock1.PerformAutoTransition();
        }

        public void timerlumaon_Tick()
        {
            timerlumaon.Enabled = false;
            LumaOn();
        }

        public void timerlumaon3_Tick()
        {
            timerlumaon3.Enabled = false;
        }

        public void buttonnormal()
        {
            btn_Done.Enabled = true;
            btn_talk.Enabled = true;
            btn_LastSong.Enabled = true;
            btn_precount.Enabled = true;
            btn_worship.Enabled = true;
            btn_rollin.Enabled = true;
            btn_reconnect.Enabled = false;
        }
        
        private void btn_precount_Click(object sender, EventArgs e)
        {
            lights.alllightsoff();
            t8banddone.BackColor = Color.Red;
            t9banddone.BackColor = Color.Red;
            t10banddone.BackColor = Color.Red;
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            LumaOff();
            Preview_HDMI4();
            FAUX1.SetSource(4);
            FAUX2.SetSource(4);
            FAUX3.SetSource(4);
            m_mixEffectBlock1.PerformAutoTransition();
        }

        private void btnKey1Air_Click(object sender, EventArgs e)
        {
            Preview_HDMI3();
            
            int KeyerState = 0;
            me1_key1.GetOnAir(out KeyerState);
            if (KeyerState == 0)
            {
                LumaOn();
            }
            else
            {
                LumaOff();
            }
        }

        private void btn_talk_Click(object sender, EventArgs e)
        {
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t8banddone.BackColor = Color.Red;
            t9banddone.BackColor = Color.Red;
            t10banddone.BackColor = Color.Red;
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            t8banddone.BackColor = Color.Green;
            lights.alllightsoff();
            lights.t8roomon();
            lights.t8spotson();
            Preview_Cam1();
            m_mixEffectBlock1.PerformAutoTransition();
            FAUX1.SetSource(1);
            FAUX2.SetSource(16);
            FAUX3.SetSource(16);
            if (theater9open == 0)
            {
                FAUX2.SetSource(2);
            }
        }

        public void btn_worship_Click(object sender, EventArgs e)
        {
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            t8banddone.BackColor = Color.Green;
            t9banddone.BackColor = Color.Green;
            t10banddone.BackColor = Color.Green;
            lights.alllightson();
            Preview_Cam1();
            FAUX1.SetSource(1);
            FAUX2.SetSource(2);
            FAUX3.SetSource(3);
            m_mixEffectBlock1.PerformAutoTransition();
            timerlumaon.Start();
            }

        private void btn_LastSong_Click_1(object sender, EventArgs e)
        {
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t8banddone.BackColor = Color.Red;
            t9banddone.BackColor = Color.Red;
            t10banddone.BackColor = Color.Red;
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            t8banddone.BackColor = Color.Green;
            lights.t8spotson();
            lights.t8roomon();
            FAUX1.SetSource(1);
            FAUX2.SetSource(4);
            FAUX3.SetSource(4);
            LumaOff();
            Preview_HDMI4();
            m_mixEffectBlock1.PerformAutoTransition();
        }

        private void btn_Done_Click(object sender, EventArgs e)
        {
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            t8banddone.BackColor = Color.Red;
            t9banddone.BackColor = Color.Red;
            t10banddone.BackColor = Color.Red;
            lights.alllightsoff();
            Preview_HDMI4();
            FAUX1.SetSource(16);
            FAUX2.SetSource(4);
            FAUX3.SetSource(4);
            m_mixEffectBlock1.PerformAutoTransition();
        }

        public void Colornorm()
        {
            btn_Done.BackColor = SystemColors.Control;
            btn_talk.BackColor = SystemColors.Control;
            btn_LastSong.BackColor = SystemColors.Control;
            btn_precount.BackColor = SystemColors.Control;
            btn_worship.BackColor = SystemColors.Control;
            btn_rollin.BackColor = SystemColors.Control;

            btn_Done.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            btn_talk.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            btn_LastSong.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            btn_precount.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            btn_worship.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            btn_rollin.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            
        }
        
        

        public void timervid_tick()
        {
            timervid.Stop();
            Preview_HDMI2();
        }

        private void btn_readymedia_Click(object sender, EventArgs e)
        {
            LumaOff();
            Preview_Black();
        }

        private void btn_mediastart_Click(object sender, EventArgs e)
        {
            Preview_HDMI4();
            LumaOff();
            FAUX1.SetSource(4);
            m_mixEffectBlock1.PerformAutoTransition();
            timervid.Start();
        }

        private void btn_mediadown_Click(object sender, EventArgs e)
        {
            Preview_Cam1();
            FAUX1.SetSource(1);
            m_mixEffectBlock1.PerformAutoTransition();
            timervid.Start();
        }

        private void blackToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(0);
        }

        private void hDMI1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(1);
        }

        private void hDMI2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(2);
        }

        private void hDMI3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(3);
        }

        private void hDMI4ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(4);
        }

        private void camera1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(5);
        }

        private void camera2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(6);
        }

        private void camera3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(7);
        }

        private void camera4ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(8);
        }

        private void programToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FAUX1.SetSource(16);
        }

        private void blackToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(0);
        }

        private void hDMI1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(1);
        }

        private void hDMI2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(2);
        }

        private void hDMI3ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(3);
        }

        private void hDMI4ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(4);
        }

        private void camera1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(5);
        }

        private void camera2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(6);
        }

        private void camera3ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(7);
        }

        private void camera4ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(8);
        }

        private void programToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            FAUX2.SetSource(16);
        }

        private void blackToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(0);
        }

        private void hDMI1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(1);
        }

        private void hDMI2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(2);
        }

        private void hDMI3ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(3);
        }

        private void hDMI4ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(4);
        }

        private void camera1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(5);
        }

        private void camera2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(6);
        }

        private void camera3ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(7);
        }

        private void camera4ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(8);
        }

        private void programToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            FAUX3.SetSource(16);
        }

        private void quitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            const string message =
    "Are you sure that you would like to close";
            const string caption = "Control Closing";
            var result = MessageBox.Show(message, caption,
                                         MessageBoxButtons.YesNo,
                                         MessageBoxIcon.Question);

            // If the no button was pressed ...
            if (result == DialogResult.No)
            {
                MessageBox.Show("THEN WHY DID YOU CLICK CLOSE, HUH?");
            }
            else
            {
                Application.Exit();

            }
        }

        private void btn_reconnect_Click(object sender, EventArgs e)
        {
            firstconnect();
        }
        
        private void btn_t8ready_Click(object sender, EventArgs e)
        {
            if (btn_t8ready.BackColor == Color.Green)
            {
                btn_t8ready.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
                btn_t8ready.BackColor = Color.Red;
            }
            else
            {
                btn_t8ready.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                btn_t8ready.BackColor = Color.Green;
            }
        }

        private void btn_t9ready_Click(object sender, EventArgs e)
        {
            if (btn_t9ready.BackColor == Color.Green)
            {
                btn_t9ready.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
                btn_t9ready.BackColor = Color.Red;
            }
            else
            {
                btn_t9ready.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                btn_t9ready.BackColor = Color.Green;
            }
        }

        private void btn_t10ready_Click(object sender, EventArgs e)
        {
            if (btn_t10ready.BackColor == Color.Green)
            {
                btn_t10ready.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
                btn_t10ready.BackColor = Color.Red;
            }
            else
            {
                btn_t10ready.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                btn_t10ready.BackColor = Color.Green;
            }
        }

        private void advancedCTRLToolStripMenuItem_Click(object sender, EventArgs e)
        {
            pass.Show();
        }

        private void lightCTRLToolStripMenuItem_Click(object sender, EventArgs e)
        {
            lights.Show();
        }

        private void returnToStartupToolStripMenuItem_Click(object sender, EventArgs e)
        {
            SwitcherDisconnected();
            clock.Stop();
            updateauxtimer.Stop();
            updateblinktimer.Stop();
            timerlumaon.Stop();
            timerlumaon3.Stop();
            timervid.Stop();
            clock.Dispose();
            updateauxtimer.Dispose();
            updateblinktimer.Dispose();
            timerlumaon.Dispose();
            timerlumaon3.Dispose();
            timervid.Dispose();
            returntostartup.Start();
        }

        public void t8banddone_Click_1(object sender, EventArgs e)
        {
            buttonX1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            lights.t8spotsoff();
            lights.t8roomoff();
            t8banddone.BackColor = Color.Red;
        }

        public void t9banddone_Click_1(object sender, EventArgs e)
        {
            buttonX1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            lights.t9roomoff();
            lights.t9spotsoff();
            t9banddone.BackColor = Color.Red;
        }

        public void t10banddone_Click_1(object sender, EventArgs e)
        {
            buttonX1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongrey));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttonred));
            lights.t10roomoff();
            lights.t10spotsoff();
            t10banddone.BackColor = Color.Red;
        }

        private void buttonX1_Click_1(object sender, EventArgs e)
        {
            buttonX1.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
            if (btn_t8ready.BackColor == Color.Green)
            {
                lights.t8roomon();
                lights.t8spotson();
                t8banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                t8banddone.BackColor = Color.Green;
            }
            if (btn_t9ready.BackColor == Color.Green)
            {
                lights.t9roomon();
                lights.t9spotson();
                t9banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                t9banddone.BackColor = Color.Green;
            }
            if (btn_t10ready.BackColor == Color.Green)
            {
                lights.t10roomon();
                lights.t10spotson();
                t10banddone.BackgroundImage = ((System.Drawing.Image)(BMDGLC.Properties.Resources.buttongreen));
                t10banddone.BackColor = Color.Green;
            }
        }

        private void advancedControlToolStripMenuItem_Click(object sender, EventArgs e)
        {
            pass.Show();
        }

        private void lightCTRLToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            lights.Show();
        }

        private void returnToStartupToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            BMDGLC.Startup start = new BMDGLC.Startup();
            start.Show();
        }

        private void btnKey2Air_Click(object sender, EventArgs e)
        {
            int keyerstate2;
            me1_key2.GetOnAir(out keyerstate2);
            if (keyerstate2 == 1)
            {
                me1_key2.SetOnAir(0);
            }
            else if (keyerstate2 == 0)
            {
                me1_key2.SetOnAir(1);
            }
        }

       

        private void theater9OpenToolStripMenuItem_Click(object sender, EventArgs e)
        {
            theater9open = 1;
        }

        


        

        

        

        

        

    }
}
            
        
            
        
    

