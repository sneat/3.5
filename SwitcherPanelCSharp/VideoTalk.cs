/* -LICENSE-START-
** Copyright (c) 2011 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

using System.Runtime.InteropServices;

using BMDSwitcherAPI;

namespace SwitcherPanelCSharp
{
    public partial class VideoTalk : Form
    {
        private IBMDSwitcherDiscovery m_switcherDiscovery;
        private IBMDSwitcher m_switcher;
        private IBMDSwitcherMixEffectBlock m_mixEffectBlock1;
        private IBMDSwitcherTransitionParameters m_transition;
        private IBMDSwitcherKey me1_key1, me1_key2, me1_key3, me1_key4;
        private IBMDSwitcherInputAux m_inputAux, m_AUX1, m_AUX2, m_AUX3;
        private IBMDSwitcherDownstreamKey me1_dkey1, me1_dkey2;
        private IBMDSwitcherAudioMixer m_audiomixer;
        private IBMDSwitcherAudioMonitorOutput m_audioMonitorOutput;
        private IBMDSwitcherAudioInput m_audioInput;

        private TransitionMonitor m_transitionMonitor;
        private SwitcherMonitor m_switcherMonitor;
        private MixEffectBlockMonitor m_mixEffectBlockMonitor;
        private KeyMonitor m_keyMonitor;
        private InputAuxMonitor m_auxMonitor;
        private DownStreamKeyMonitor m_dkeyMonitor;
        private AudioMixerMonitor m_audioMixerMonitor;
        private AudioInputMonitor m_audioInputMonitor;
        private AudioMixerMonitorOutputMonitor m_audioOutputMonitor;

        private List<InputMonitor> m_inputMonitors = new List<InputMonitor>();

        public VideoTalk()
        {
            InitializeComponent();

            m_switcherMonitor = new SwitcherMonitor();
            // note: this invoke pattern ensures our callback is called in the main thread. We are making double
            // use of lambda expressions here to achieve this.
            // Essentially, the events will arrive at the callback class (implemented by our monitor classes)
            // on a separate thread. We must marshell these to the main thread, and we're doing this by calling
            // invoke on the Windows Forms object. The lambda expression is just a simplification.
            m_switcherMonitor.SwitcherDisconnected += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => SwitcherDisconnected())));

            m_mixEffectBlockMonitor = new MixEffectBlockMonitor();
            //m_mixEffectBlockMonitor.TransitionFramesRemainingChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => UpdateTransitionFramesRemaining())));
            //m_mixEffectBlockMonitor.TransitionPositionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => UpdateSliderPosition())));
            //m_mixEffectBlockMonitor.InTransitionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => OnInTransitionChanged())));
            //m_mixEffectBlockMonitor.FadeToBlackFramesRemainingChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => FTBRateChanged())));
            //m_mixEffectBlockMonitor.FadeToBlackRateChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => FTBRateChanged())));
            //m_mixEffectBlockMonitor.InFadeToBlackChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => InFadeToBlackChanged())));
            //m_mixEffectBlockMonitor.PreviewTransitionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => PreviewTransitionChanged())));
            m_mixEffectBlockMonitor.ProgramInputChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => ProgramInputChanged())));
            //m_mixEffectBlockMonitor.PreviewInputChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => PreviewInputChanged())));
            
            m_transitionMonitor = new TransitionMonitor();/*
            m_transitionMonitor.NextTransitionSelectionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => TransitionSelectionChanged())));
            m_transitionMonitor.NextTransitionStyleChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => NextTransitionStyleChanged())));
            m_transitionMonitor.TransitionSelectionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => TransitionSelectionChanged())));
            m_transitionMonitor.TransitionStyleChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => TransitionStyleChanged())));
            */
            m_keyMonitor = new KeyMonitor();
            //m_keyMonitor.CanBeDVEKeyChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerCanBeDVEKeyChanged())));
            //m_keyMonitor.InputCutChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerInputCutChanged())));
            //m_keyMonitor.InputFillChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerInputFillChanged())));
            //m_keyMonitor.MaskBottomChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskBottomChanged())));
            //m_keyMonitor.MaskedChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskedChanged())));
            //m_keyMonitor.MaskLeftChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskLeftChanged())));
            //m_keyMonitor.MaskRightChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskRightChanged())));
            //m_keyMonitor.MaskTopChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskTopChanged())));
            m_keyMonitor.OnAirChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerOnAirChanged())));
            //m_keyMonitor.TypeChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerTypeChanged())));

            m_auxMonitor = new InputAuxMonitor();
            m_auxMonitor.InputSourceChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => InputAuxChanged())));
            
            m_dkeyMonitor = new DownStreamKeyMonitor();/*
            //m_dkeyMonitor.ClipChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerClipChanged())));
            m_dkeyMonitor.FramesRemainingChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerFramesRemainingChanged())));
            //m_dkeyMonitor.GainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerGainChanged())));
            //m_dkeyMonitor.InputCutChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerInputCutChanged())));
            //m_dkeyMonitor.InputFillChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerInputFillChanged())));
            //m_dkeyMonitor.InverseChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerInverseChanged())));
            m_dkeyMonitor.IsAutoTransitioningChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerIsAutoTransitioningChanged())));
            //m_dkeyMonitor.IsTransitioningChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerIsTransitioningChanged())));
            //m_dkeyMonitor.MaskBottomChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskBottomChanged())));
            //m_dkeyMonitor.MaskedChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskedChanged())));
            //m_dkeyMonitor.MaskLeftChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskLeftChanged())));
            //m_dkeyMonitor.MaskRightChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskRightChanged())));
            //m_dkeyMonitor.MaskTopChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskTopChanged())));
            m_dkeyMonitor.OnAirChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerOnAirChanged())));
            //m_dkeyMonitor.PreMultipliedChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerPreMultipliedChanged())));
            m_dkeyMonitor.RateChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerFramesRemainingChanged())));
            m_dkeyMonitor.TieChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerTieChanged())));
            */
            m_audioMixerMonitor = new AudioMixerMonitor();/*
            m_audioMixerMonitor.ProgramOutBalanceChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioProgramOutBalanceChanged())));
            m_audioMixerMonitor.ProgramOutGainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioProgramOutGainChanged())));
            m_audioMixerMonitor.ProgramOutLevelNotificationChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioProgramOutLevelNotificationChanged())));
            */
            m_audioOutputMonitor = new AudioMixerMonitorOutputMonitor();/*
            m_audioOutputMonitor.DimChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputDimChanged())));
            //m_audioOutputMonitor.DimLevelChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputDimLevelChanged())));
            m_audioOutputMonitor.GainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputGainChanged())));
            //m_audioOutputMonitor.LevelNotificationChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputLevelNotificationChanged())));
            m_audioOutputMonitor.MonitorEnableChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputEnableChanged())));
            m_audioOutputMonitor.MuteChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputMuteChanged())));
            //m_audioOutputMonitor.SoloChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputSoloChanged())));
            //m_audioOutputMonitor.SoloInputChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputSoloInputChanged())));
            */
            m_audioInputMonitor = new AudioInputMonitor();
           /* m_audioInputMonitor.BalanceChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioBalanceChanged())));
            m_audioInputMonitor.GainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioGainChanged())));
            m_audioInputMonitor.IsMixedInChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioIsMixedInChanged())));
            m_audioInputMonitor.LevelNotificationChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioLevelNotificationChanged())));
            m_audioInputMonitor.MixOptionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioMixOptionChanged())));
            */

            m_switcherDiscovery = new CBMDSwitcherDiscovery();
            if (m_switcherDiscovery == null)
            {
                MessageBox.Show("Could not create Switcher Discovery Instance.\nATEM Switcher Software may not be installed.", "Error");
                Environment.Exit(1);
            }
            
            SwitcherDisconnected();		// start with switcher disconnected
        }

        private void InputAuxChanged()
        {
            long Aux1Input;
            long Aux2Input;
            long Aux3Input;

            m_AUX1.GetInputSource(out Aux1Input);
            m_AUX2.GetInputSource(out Aux2Input);
            m_AUX3.GetInputSource(out Aux3Input);

            blackToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            colorBarsToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            programToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            previewToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            blackToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            colorBarsToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            programToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            previewToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            blackToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            colorBarsToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            programToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            previewToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            switch (Aux1Input)
            {
                case (0):
                    blackToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (1):
                    hDMI1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (2):
                    hDMI2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (3):
                    hDMI3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (4):
                    hDMI4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (5):
                    camera1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (6):
                    camera2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (7):
                    camera3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (8):
                    camera4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (9):
                    colorBarsToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (10):
                    color1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (11):
                    color2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (12):
                    mediaPlayer1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (13):
                    mediaPlayer1KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;


                case (14):
                    mediaPlayer2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (15):
                    mediaPlayer2KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (16):
                    programToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (17):
                    previewToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (18):
                    cleanFeed1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (19):
                    cleanFeed2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;
            }

            switch (Aux2Input)
            {
                case (0):
                    blackToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (1):
                    hDMI1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (2):
                    hDMI2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (3):
                    hDMI3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (4):
                    hDMI4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (5):
                    camera1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (6):
                    camera2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (7):
                    camera3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (8):
                    camera4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (9):
                    colorBarsToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (10):
                    color1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (11):
                    color2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (12):
                    mediaPlayer1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (13):
                    mediaPlayer1KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;


                case (14):
                    mediaPlayer2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (15):
                    mediaPlayer2KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (16):
                    programToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (17):
                    previewToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (18):
                    cleanFeed1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (19):
                    cleanFeed2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;
            }

            switch (Aux3Input)
            {
                case (0):
                    blackToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (1):
                    hDMI1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (2):
                    hDMI2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (3):
                    hDMI3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (4):
                    hDMI4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (5):
                    camera1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (6):
                    camera2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (7):
                    camera3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (8):
                    camera4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (9):
                    colorBarsToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (10):
                    color1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (11):
                    color2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (12):
                    mediaPlayer1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (13):
                    mediaPlayer1KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;


                case (14):
                    mediaPlayer2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (15):
                    mediaPlayer2KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (16):
                    programToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (17):
                    previewToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (18):
                    cleanFeed1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (19):
 
                   cleanFeed2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;
            }

            int key1;
            me1_key1.GetOnAir(out key1);

            long key2;
            me1_key2.GetInputFill(out key2);

            long program;
            m_mixEffectBlock1.GetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, out program);

            long aux1;
            long aux2;
            long aux3;
            m_AUX1.GetInputSource(out aux1);
            m_AUX2.GetInputSource(out aux2);
            m_AUX3.GetInputSource(out aux3);

            btn_precount.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_worship.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_rollin.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_talk.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_LastSong.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_mediastart.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_readymedia.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_mediadown.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            if (aux1 == 4 && aux2 == 4 && aux3 == 4 && program == 4 && key1 == 0)
            {
                btn_precount.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (aux1 == 1 && aux2 == 2 && aux3 == 3 && program == 5 && key1 == 1)
            {
                btn_worship.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (aux1 == 16 && aux2 == 16 && aux3 == 16 && program == 4 && key1 == 0)
            {
                btn_rollin.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (aux1 == 1 && aux2 == 16 && aux3 == 16 && program == 5 && key1 == 1)
            {
                btn_talk.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (aux1 == 1 && aux2 == 16 && aux3 == 16 && program == 5 && key1 == 0 && key2 == 4)
            {
                btn_readymedia.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                btn_talk.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (aux1 == 1 && aux2 == 16 && aux3 == 16 && program == 4 && key1 == 0)
            {
                btn_mediastart.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                btn_talk.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (aux1 == 1 && aux2 == 16 && aux3 == 16 && program == 5 && key1 == 0  && key2 == 5)
            {
                btn_mediadown.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                btn_talk.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (aux1 == 1 && aux2 == 4 && aux3 == 4 && program == 4 && key1 == 0)
            {
                btn_LastSong.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }
        }

        private void KeyerOnAirChanged()
        {
            int Keyer1OnAir;

            me1_key1.GetOnAir(out Keyer1OnAir);

            if (Keyer1OnAir == 1)
            {
                btnKey1Air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }
            else
            {
                btnKey1Air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }

            InputAuxChanged();
        }

        private void ProgramInputChanged()
        {
            InputAuxChanged();
        }

        private void SwitcherConnected()
        {
            btn_reconnect.Enabled = false;
            reactivatebuttons();
            // Get the switcher name:
            string switcherName;
            m_switcher.GetString(_BMDSwitcherPropertyId.bmdSwitcherPropertyIdProductName, out switcherName);
            this.Text = switcherName;

            // Install SwitcherMonitor callbacks:
            m_switcher.AddCallback(m_switcherMonitor);

            // We create input monitors for each input. To do this we iterator over all inputs:
            // This will allow us to update the combo boxes when input names change:
            IBMDSwitcherInputIterator inputIterator;
            if (SwitcherAPIHelper.CreateIterator(m_switcher, out inputIterator))
            {
                IBMDSwitcherInput input;
                inputIterator.Next(out input);
                while (input != null)
                {
                    InputMonitor newInputMonitor = new InputMonitor(input);
                    input.AddCallback(newInputMonitor);

                    m_inputMonitors.Add(newInputMonitor);

                    inputIterator.Next(out input);
                }
            }

            // We want to get the first Mix Effect block (ME 1). We create a ME iterator,
            // and then get the first one:
            m_mixEffectBlock1 = null;
            IBMDSwitcherMixEffectBlockIterator meIterator;
            SwitcherAPIHelper.CreateIterator(m_switcher, out meIterator);

            if (meIterator != null)
            {
                meIterator.Next(out m_mixEffectBlock1);
            }

            if (m_mixEffectBlock1 == null)
            {
                MessageBox.Show("Unexpected: Could not get first mix effect block", "Error");
                return;
            }

            // Install MixEffectBlockMonitor callbacks:
            m_mixEffectBlock1.AddCallback(m_mixEffectBlockMonitor);

            m_transition = (BMDSwitcherAPI.IBMDSwitcherTransitionParameters)m_mixEffectBlock1;
            m_transition.AddCallback(m_transitionMonitor);

            IBMDSwitcherKeyIterator keyIterator;
            SwitcherAPIHelper.CreateIterator(m_mixEffectBlock1, out keyIterator);

            if (keyIterator != null)
            {
                keyIterator.Next(out me1_key1);
                keyIterator.Next(out me1_key2);
                keyIterator.Next(out me1_key3);
                keyIterator.Next(out me1_key4);   
            }

            me1_key1.AddCallback(m_keyMonitor);
            me1_key2.AddCallback(m_keyMonitor);
            me1_key3.AddCallback(m_keyMonitor);
            me1_key4.AddCallback(m_keyMonitor);


            if (SwitcherAPIHelper.CreateIterator(m_switcher, out inputIterator))
            {
                IBMDSwitcherInput input;
                inputIterator.Next(out input);
                while (input != null)
                {
                    InputMonitor newInputMonitor = new InputMonitor(input);
                    input.AddCallback(newInputMonitor);
                    m_inputMonitors.Add(newInputMonitor);
                    inputIterator.Next(out input);
                    IntPtr lvPointer;
                    IBMDSwitcherInputIterator lvInputIterator;
                    IBMDSwitcherInput lvInput;
                    string lvPortName;
                    long lvPortType;
                    int lvAUXCount;
                    lvAUXCount = 0;
                    m_switcher.CreateIterator(typeof(IBMDSwitcherInputIterator).GUID, out lvPointer);
                    lvInputIterator = (IBMDSwitcherInputIterator)Marshal.GetObjectForIUnknown(lvPointer);
                    lvInputIterator.Next(out lvInput);
                    while (lvInput != null)
                    {
                        lvInput.GetString(BMDSwitcherAPI._BMDSwitcherInputPropertyId.bmdSwitcherInputPropertyIdLongName, out lvPortName); // bmdSwitcherInputPropertyIdLongName

                        lvInput.GetInt(BMDSwitcherAPI._BMDSwitcherInputPropertyId.bmdSwitcherInputPropertyIdPortType, out lvPortType);

                        if ((_BMDSwitcherPortType)lvPortType == BMDSwitcherAPI._BMDSwitcherPortType.bmdSwitcherPortTypeColorGenerator)
                        {

                        }

                        if ((_BMDSwitcherPortType)lvPortType == BMDSwitcherAPI._BMDSwitcherPortType.bmdSwitcherPortTypeAuxOutput)
                        {
                            lvAUXCount = lvAUXCount + 1;

                            m_inputAux = (IBMDSwitcherInputAux)lvInput;

                            if (lvAUXCount == 1)
                            {
                                m_AUX1 = m_inputAux;
                            }
                            if (lvAUXCount == 2)
                            {
                                m_AUX2 = m_inputAux;
                            }
                            if (lvAUXCount == 3)
                            {
                                m_AUX3 = m_inputAux;
                            }
                        }
                        lvInputIterator.Next(out lvInput);
                    }
                }
            }
            m_AUX1.AddCallback(m_auxMonitor);
            m_AUX2.AddCallback(m_auxMonitor);
            m_AUX3.AddCallback(m_auxMonitor);
            
            IBMDSwitcherDownstreamKeyIterator dkeyiterator;
            dkeyiterator = null;
            SwitcherAPIHelper.CreateIterator(m_switcher, out dkeyiterator);
            if (dkeyiterator != null)
            {
                dkeyiterator.Next(out me1_dkey1);
                dkeyiterator.Next(out me1_dkey2);
            }

            me1_dkey1.AddCallback(m_dkeyMonitor);
            me1_dkey2.AddCallback(m_dkeyMonitor);

            m_audiomixer = (BMDSwitcherAPI.IBMDSwitcherAudioMixer)m_switcher;
            m_audiomixer.AddCallback(m_audioMixerMonitor);

            IBMDSwitcherAudioInputIterator m_audioInputiterator;
            SwitcherAPIHelper.CreateIterator(m_audiomixer, out m_audioInputiterator);

            if (m_audioInputiterator != null)
            {
                m_audioInputiterator.Next(out m_audioInput);
            }

            m_audioInput.AddCallback(m_audioInputMonitor);

            IBMDSwitcherAudioMonitorOutputIterator m_audioOutputIterator;
            SwitcherAPIHelper.CreateIterator(m_audiomixer, out m_audioOutputIterator);

            if (m_audioOutputIterator != null)
            {
                m_audioOutputIterator.Next(out m_audioMonitorOutput);
            }

            m_audioMonitorOutput.AddCallback(m_audioOutputMonitor);
            btnKey1Air.Enabled = true;
            ProgramInputChanged();
            KeyerOnAirChanged();
            InputAuxChanged();
        }

        private void SwitcherDisconnected()
        {
            try
            {
                this.Text = "";
                deactivatebuttons();
                btn_reconnect.Enabled = true;
                btnKey1Air.Enabled = false;
                if (m_audioInput != null)
                {
                    m_audioInput.RemoveCallback(m_audioInputMonitor);
                    m_audioInput = null;
                }

                if (m_audioMonitorOutput != null)
                {
                    m_audioMonitorOutput.RemoveCallback(m_audioOutputMonitor);
                    m_audioMonitorOutput = null;
                }

                if (m_audiomixer != null)
                {
                    m_audiomixer.RemoveCallback(m_audioMixerMonitor);
                    m_audiomixer = null;
                }

                if (me1_dkey1 != null)
                {
                    // Remove callback
                    me1_dkey1.RemoveCallback(m_dkeyMonitor);

                    // Release reference
                    me1_dkey1 = null;
                }

                if (me1_dkey2 != null)
                {
                    // Remove callback
                    me1_dkey2.RemoveCallback(m_dkeyMonitor);

                    // Release reference
                    me1_dkey2 = null;
                }

                if (m_AUX1 != null)
                {
                    // Remove callback
                    m_AUX1.RemoveCallback(m_auxMonitor);

                    // Release reference
                    m_AUX1 = null;
                }

                if (m_AUX2 != null)
                {
                    // Remove callback
                    m_AUX2.RemoveCallback(m_auxMonitor);

                    // Release reference
                    m_AUX2 = null;
                }

                if (m_AUX3 != null)
                {
                    // Remove callback
                    m_AUX3.RemoveCallback(m_auxMonitor);

                    // Release reference
                    m_AUX3 = null;
                }

                if (me1_key1 != null)
                {
                    // Remove callback
                    me1_key1.RemoveCallback(m_keyMonitor);

                    // Release reference
                    me1_key1 = null;
                }
                if (me1_key2 != null)
                {
                    // Remove callback
                    me1_key2.RemoveCallback(m_keyMonitor);

                    // Release reference
                    me1_key2 = null;
                }
                if (me1_key3 != null)
                {
                    // Remove callback
                    me1_key3.RemoveCallback(m_keyMonitor);

                    // Release reference
                    me1_key3 = null;
                }
                if (me1_key4 != null)
                {
                    // Remove callback
                    me1_key4.RemoveCallback(m_keyMonitor);

                    // Release reference
                    me1_key4 = null;
                }

                if (m_transition != null)
                {
                    // Remove callback
                    m_transition.RemoveCallback(m_transitionMonitor);

                    // Release reference
                    m_transition = null;
                }

                // Remove all input monitors, remove callbacks
                foreach (InputMonitor inputMon in m_inputMonitors)
                {
                    inputMon.Input.RemoveCallback(inputMon);
                }
                m_inputMonitors.Clear();

                if (m_mixEffectBlock1 != null)
                {
                    // Remove callback
                    m_mixEffectBlock1.RemoveCallback(m_mixEffectBlockMonitor);

                    // Release reference
                    m_mixEffectBlock1 = null;
                }

                if (m_switcher != null)
                {
                    // Remove callback:
                    m_switcher.RemoveCallback(m_switcherMonitor);

                    // release reference:
                    m_switcher = null;
                }
            }
            catch (ArgumentException)
            {
                SwitcherDisconnected();
            }
        }

        private void btn_key1air_Click(object sender, EventArgs e)
        {
            int OnAir;
            me1_key1.GetOnAir(out OnAir);
            if (OnAir == 1)
            {
                me1_key1.SetOnAir(0);
            }
            else
            {
                me1_key1.SetOnAir(1);
            }
        }

        private void blackToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(0);
        }

        private void hDMI1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(1);
        }

        private void hDMI2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(2);
        }

        private void hDMI3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(3);
        }

        private void hDMI4ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(4);
        }

        private void camera1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(5);
        }

        private void camera2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(6);
        }

        private void camera3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(7);
        }

        private void camera4ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(8);
        }

        private void colorBarsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(9);
        }

        private void color1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(10);
        }

        private void color2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(11);
        }

        private void mediaPlayer1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(12);
        }

        private void mediaPlayer1KeyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(13);
        }

        private void mediaPlayer2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(14);
        }

        private void mediaPlayer2KeyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(15);
        }

        private void programToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(16);
        }

        private void previewToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(17);
        }

        private void cleanFeed1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(18);
        }

        private void cleanFeed2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(19);
        }

        private void blackToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(0);
        }

        private void hDMI1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(1);
        }

        private void hDMI2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(2);
        }

        private void hDMI3ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(3);
        }

        private void hDMI4ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(4);
        }

        private void camera1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(5);
        }

        private void camera2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(6);
        }

        private void camera3ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(7);
        }

        private void camera4ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(8);
        }

        private void colorBarsToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(9);
        }

        private void color1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(10);
        }

        private void color2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(11);
        }

        private void mediaPlayer1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(12);
        }

        private void mediaPlayer1KeyToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(13);
        }

        private void mediaPlayer2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(14);
        }

        private void mediaPlayer2KeyToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(15);
        }

        private void programToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(16);
        }

        private void previewToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(17);
        }

        private void cleanFeed1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(18);
        }

        private void cleanFeed2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(19);
        }

        private void blackToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(0);
        }

        private void hDMI1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(1);
        }

        private void hDMI2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(2);
        }

        private void hDMI3ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(3);
        }

        private void hDMI4ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(4);
        }

        private void camera1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(5);
        }

        private void camera2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(6);
        }

        private void camera3ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(7);
        }

        private void camera4ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(8);
        }

        private void colorBarsToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(9);
        }

        private void color1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(10);
        }

        private void color2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(11);
        }

        private void mediaPlayer1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(12);
        }

        private void mediaPlayer1KeyToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(13);
        }

        private void mediaPlayer2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(14);
        }

        private void mediaPlayer2KeyToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(15);
        }

        private void programToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(16);
        }

        private void previewToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(17);
        }

        private void cleanFeed1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(18);
        }

        private void cleanFeed2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(19);
        }

        private void Theater8_Load(object sender, EventArgs e)
        {
            initialconnect();
        }

        private void initialconnect()
        {
            _BMDSwitcherConnectToFailure failReason = 0;
            string address = "192.168.1.100";

            try
            {
                // Note that ConnectTo() can take several seconds to return, both for success or failure,
                // depending upon hostname resolution and network response times, so it may be best to
                // do this in a separate thread to prevent the main GUI thread blocking.
                m_switcherDiscovery.ConnectTo(address, out m_switcher, out failReason);
            }
            catch (COMException)
            {
                // An exception will be thrown if ConnectTo fails. For more information, see failReason.
                switch (failReason)
                {
                    case _BMDSwitcherConnectToFailure.bmdSwitcherConnectToFailureNoResponse:
                        MessageBox.Show("No response from Switcher", "Error");
                        break;
                    case _BMDSwitcherConnectToFailure.bmdSwitcherConnectToFailureIncompatibleFirmware:
                        MessageBox.Show("Switcher has incompatible firmware", "Error");
                        break;
                    default:
                        MessageBox.Show("Connection failed for unknown reason", "Error");
                        break;
                }
                return;
            }

            SwitcherConnected();
        }

        private void closeToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void admintoolStripMenuItem1_Click(object sender, EventArgs e)
        {
            SwitcherPanelCSharp.SwitcherPanel switcherpanel = new SwitcherPanel();
            switcherpanel.Show();
        }

        private void btn_t8ready_Click(object sender, EventArgs e)
        {
            if (btn_t8ready.BackColor == Color.Red)
            {
                btn_t8ready.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                btn_t8ready.BackColor = Color.Green;
            }
            else
            {
                btn_t8ready.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                btn_t8ready.BackColor = Color.Red;
            }
        }

        private void btn_t9ready_Click(object sender, EventArgs e)
        {
            if (btn_t9ready.BackColor == Color.Red)
            {
                btn_t9ready.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                btn_t9ready.BackColor = Color.Green;
            }
            else
            {
                btn_t9ready.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                btn_t9ready.BackColor = Color.Red;
            }
        }

        private void btn_t10ready_Click(object sender, EventArgs e)
        {
            if (btn_t10ready.BackColor == Color.Red)
            {
                btn_t10ready.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                btn_t10ready.BackColor = Color.Green;
            }
            else
            {
                btn_t10ready.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                btn_t10ready.BackColor = Color.Red;
            }
        }

        private void btn_lightson_Click(object sender, EventArgs e)
        {
            Lights lights = new Lights();

            if (btn_t8ready.BackColor == Color.Green)
            {
                lights.t8roomon();
                lights.t8spotson();
                t8banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (btn_t9ready.BackColor == Color.Green)
            {
                lights.t9roomon();
                lights.t9spotson();
                t9banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }

            if (btn_t10ready.BackColor == Color.Green)
            {
                lights.t10roomon();
                lights.t10spotson();
                t10banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            }
        }

        private void t8banddone_Click(object sender, EventArgs e)
        {
            Lights lights = new Lights();
            lights.t8spotsoff();
            lights.t8roomoff();
            t8banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
        }

        private void t9banddone_Click(object sender, EventArgs e)
        {
            t9banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            Lights lights = new Lights();
            lights.t9spotsoff();
            lights.t9roomoff();
        }

        private void t10banddone_Click(object sender, EventArgs e)
        {
            t10banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            Lights lights = new Lights();
            lights.t10spotsoff();
            lights.t10roomoff();
        }

        private void btn_precount_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            Lights lights = new Lights();
            btn_precount.Enabled = false;
            m_AUX1.SetInputSource(4);
            m_AUX2.SetInputSource(4);
            m_AUX3.SetInputSource(4);
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 4);
            m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground);
            m_mixEffectBlock1.PerformAutoTransition();
            lights.alllightsoff();
            t8banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            me1_key1.SetOnAir(0);
        }

        private void btn_worship_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            Lights lights = new Lights();
            btn_worship.Enabled = false;
            m_AUX1.SetInputSource(1);
            m_AUX2.SetInputSource(2);
            m_AUX3.SetInputSource(3);
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 5);
            me1_key1.SetOnAir(1);
            m_mixEffectBlock1.PerformAutoTransition();
            lights.alllightson();
            t8banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
        }

        private void btn_rollin_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            Lights lights = new Lights();
            btn_rollin.Enabled = false;
            m_AUX1.SetInputSource(16);
            m_AUX2.SetInputSource(16);
            m_AUX3.SetInputSource(16);
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 4);
            me1_key1.SetOnAir(0);
            m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground);
            m_mixEffectBlock1.PerformAutoTransition();
            lights.alllightsoff();
            t8banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
        }

        private void btn_talk_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            Lights lights = new Lights();
            btn_talk.Enabled = false;
            m_AUX1.SetInputSource(1);
            m_AUX2.SetInputSource(16);
            m_AUX3.SetInputSource(16);
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 5);
            m_mixEffectBlock1.PerformAutoTransition();
            lights.t8roomon();
            lights.t8spotson();
            lights.t9roomoff();
            lights.t9spotsoff();
            lights.t10roomoff();
            lights.t10spotsoff();
            t8banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
            t9banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            t10banddone.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
        }

        private void btn_LastSong_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            Lights lights = new Lights();
            btn_LastSong.Enabled = false;
            m_AUX1.SetInputSource(1);
            m_AUX2.SetInputSource(4);
            m_AUX3.SetInputSource(4);
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 4);
            me1_key1.SetOnAir(0);
            m_mixEffectBlock1.PerformAutoTransition();
            lights.t8roomon();
            lights.t8spotson();
            me1_key2.SetInputFill(6);
        }

        private void btn_readymedia_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            btn_readymedia.Enabled = false;
            me1_key1.SetOnAir(0);
            me1_key2.SetInputFill(4);
        }

        private void btn_mediastart_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            btn_mediastart.Enabled = false;
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 4);
            m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground);
            m_mixEffectBlock1.PerformAutoTransition();
        }

        private void btn_mediadown_Click(object sender, EventArgs e)
        {
            reactivatebuttons();
            btn_mediadown.Enabled = false;
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 5);
            m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground);
            m_mixEffectBlock1.PerformAutoTransition();
            me1_key2.SetInputFill(5);
        }

        private void reactivatebuttons()
        {
            btn_precount.Enabled = true;
            btn_worship.Enabled = true;
            btn_rollin.Enabled = true;
            btn_talk.Enabled = true;
            btn_LastSong.Enabled = true;
            btn_readymedia.Enabled = true;
            btn_mediastart.Enabled = true;
            btn_mediadown.Enabled = true;
        }

        private void deactivatebuttons()
        {
            btn_precount.Enabled = false;
            btn_worship.Enabled = false;
            btn_rollin.Enabled = false;
            btn_talk.Enabled = false;
            btn_LastSong.Enabled = false;
            btn_readymedia.Enabled = false;
            btn_mediastart.Enabled = false;
            btn_mediadown.Enabled = false;
        }

        private void btnKey1Air_Click(object sender, EventArgs e)
        {
            int key1;
            me1_key1.GetOnAir(out key1);

            if (key1 == 0)
            {
                me1_key1.SetOnAir(1);
            }
            else
            {
                me1_key1.SetOnAir(0);
            }
        }

        private void btn_reconnect_Click(object sender, EventArgs e)
        {
            initialconnect();
        }
    }
}