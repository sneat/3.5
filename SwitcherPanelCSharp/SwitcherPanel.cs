/* -LICENSE-START-
** Copyright (c) 2011 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

using System.Runtime.InteropServices;

using BMDSwitcherAPI;

namespace SwitcherPanelCSharp
{
    public partial class SwitcherPanel : Form
    {
        private IBMDSwitcherDiscovery m_switcherDiscovery;
        private IBMDSwitcher m_switcher;
        private IBMDSwitcherMixEffectBlock m_mixEffectBlock1;
        private IBMDSwitcherTransitionParameters m_transition;
        private IBMDSwitcherKey me1_key1, me1_key2, me1_key3, me1_key4;
        private IBMDSwitcherInputAux m_inputAux, m_AUX1, m_AUX2, m_AUX3;
        private IBMDSwitcherDownstreamKey me1_dkey1, me1_dkey2;
        private IBMDSwitcherAudioMixer m_audiomixer;
        private IBMDSwitcherAudioMonitorOutput m_audioMonitorOutput;
        private IBMDSwitcherAudioInput m_audioInput;

        private TransitionMonitor m_transitionMonitor;
        private SwitcherMonitor m_switcherMonitor;
        private MixEffectBlockMonitor m_mixEffectBlockMonitor;
        private KeyMonitor m_keyMonitor;
        private InputAuxMonitor m_auxMonitor;
        private DownStreamKeyMonitor m_dkeyMonitor;
        private AudioMixerMonitor m_audioMixerMonitor;
        private AudioInputMonitor m_audioInputMonitor;
        private AudioMixerMonitorOutputMonitor m_audioOutputMonitor;

        private bool m_moveSliderDownwards = false;
        private bool m_currentTransitionReachedHalfway = false;
        private bool m_bkgdlayer = false;
        private bool m_key1layer = false;
        private bool m_key2layer = false;
        private bool m_key3layer = false;
        private bool m_key4layer = false;
        
        private List<InputMonitor> m_inputMonitors = new List<InputMonitor>();

        public SwitcherPanel()
        {
            InitializeComponent();

            m_switcherMonitor = new SwitcherMonitor();
            // note: this invoke pattern ensures our callback is called in the main thread. We are making double
            // use of lambda expressions here to achieve this.
            // Essentially, the events will arrive at the callback class (implemented by our monitor classes)
            // on a separate thread. We must marshell these to the main thread, and we're doing this by calling
            // invoke on the Windows Forms object. The lambda expression is just a simplification.
            m_switcherMonitor.SwitcherDisconnected += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => SwitcherDisconnected())));

            m_mixEffectBlockMonitor = new MixEffectBlockMonitor();
            m_mixEffectBlockMonitor.TransitionFramesRemainingChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => UpdateTransitionFramesRemaining())));
            m_mixEffectBlockMonitor.TransitionPositionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => UpdateSliderPosition())));
            m_mixEffectBlockMonitor.InTransitionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => OnInTransitionChanged())));
            m_mixEffectBlockMonitor.FadeToBlackFramesRemainingChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => FTBRateChanged())));
            m_mixEffectBlockMonitor.FadeToBlackRateChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => FTBRateChanged())));
            m_mixEffectBlockMonitor.InFadeToBlackChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => InFadeToBlackChanged())));
            m_mixEffectBlockMonitor.PreviewTransitionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => PreviewTransitionChanged())));
            m_mixEffectBlockMonitor.ProgramInputChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => ProgramInputChanged())));
            m_mixEffectBlockMonitor.PreviewInputChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => PreviewInputChanged())));

            m_transitionMonitor = new TransitionMonitor();
            m_transitionMonitor.NextTransitionSelectionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => TransitionSelectionChanged())));
            m_transitionMonitor.NextTransitionStyleChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => NextTransitionStyleChanged())));
            m_transitionMonitor.TransitionSelectionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => TransitionSelectionChanged())));
            m_transitionMonitor.TransitionStyleChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => TransitionStyleChanged())));

            m_keyMonitor = new KeyMonitor();
            //m_keyMonitor.CanBeDVEKeyChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerCanBeDVEKeyChanged())));
            //m_keyMonitor.InputCutChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerInputCutChanged())));
            //m_keyMonitor.InputFillChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerInputFillChanged())));
            //m_keyMonitor.MaskBottomChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskBottomChanged())));
            //m_keyMonitor.MaskedChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskedChanged())));
            //m_keyMonitor.MaskLeftChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskLeftChanged())));
            //m_keyMonitor.MaskRightChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskRightChanged())));
            //m_keyMonitor.MaskTopChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerMaskTopChanged())));
            m_keyMonitor.OnAirChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerOnAirChanged())));
            //m_keyMonitor.TypeChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => KeyerTypeChanged())));

            m_auxMonitor = new InputAuxMonitor();
            m_auxMonitor.InputSourceChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => InputAuxChanged())));

            m_dkeyMonitor = new DownStreamKeyMonitor();
            //m_dkeyMonitor.ClipChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerClipChanged())));
            m_dkeyMonitor.FramesRemainingChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerFramesRemainingChanged())));
            //m_dkeyMonitor.GainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerGainChanged())));
            //m_dkeyMonitor.InputCutChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerInputCutChanged())));
            //m_dkeyMonitor.InputFillChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerInputFillChanged())));
            //m_dkeyMonitor.InverseChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerInverseChanged())));
            m_dkeyMonitor.IsAutoTransitioningChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerIsAutoTransitioningChanged())));
            //m_dkeyMonitor.IsTransitioningChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerIsTransitioningChanged())));
            //m_dkeyMonitor.MaskBottomChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskBottomChanged())));
            //m_dkeyMonitor.MaskedChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskedChanged())));
            //m_dkeyMonitor.MaskLeftChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskLeftChanged())));
            //m_dkeyMonitor.MaskRightChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskRightChanged())));
            //m_dkeyMonitor.MaskTopChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerMaskTopChanged())));
            m_dkeyMonitor.OnAirChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerOnAirChanged())));
            //m_dkeyMonitor.PreMultipliedChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerPreMultipliedChanged())));
            m_dkeyMonitor.RateChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerFramesRemainingChanged())));
            m_dkeyMonitor.TieChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => DKeyerTieChanged())));

            m_audioMixerMonitor = new AudioMixerMonitor();
            m_audioMixerMonitor.ProgramOutBalanceChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioProgramOutBalanceChanged())));
            m_audioMixerMonitor.ProgramOutGainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioProgramOutGainChanged())));
            m_audioMixerMonitor.ProgramOutLevelNotificationChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioProgramOutLevelNotificationChanged())));

            m_audioOutputMonitor = new AudioMixerMonitorOutputMonitor();
            m_audioOutputMonitor.DimChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputDimChanged())));
            //m_audioOutputMonitor.DimLevelChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputDimLevelChanged())));
            m_audioOutputMonitor.GainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputGainChanged())));
            //m_audioOutputMonitor.LevelNotificationChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputLevelNotificationChanged())));
            m_audioOutputMonitor.MonitorEnableChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputEnableChanged())));
            m_audioOutputMonitor.MuteChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputMuteChanged())));
            //m_audioOutputMonitor.SoloChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputSoloChanged())));
            //m_audioOutputMonitor.SoloInputChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioOutputSoloInputChanged())));

            m_audioInputMonitor = new AudioInputMonitor();
           /* m_audioInputMonitor.BalanceChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioBalanceChanged())));
            m_audioInputMonitor.GainChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioGainChanged())));
            m_audioInputMonitor.IsMixedInChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioIsMixedInChanged())));
            m_audioInputMonitor.LevelNotificationChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioLevelNotificationChanged())));
            m_audioInputMonitor.MixOptionChanged += new SwitcherEventHandler((s, a) => this.Invoke((Action)(() => AudioMixOptionChanged())));
            */
            m_switcherDiscovery = new CBMDSwitcherDiscovery();
            if (m_switcherDiscovery == null)
            {
                MessageBox.Show("Could not create Switcher Discovery Instance.\nATEM Switcher Software may not be installed.", "Error");
                Environment.Exit(1);
            }
            
            SwitcherDisconnected();		// start with switcher disconnected
        }

        private void AudioOutputMuteChanged()
        {
            int audio;
            m_audioMonitorOutput.GetMute(out audio);
            if (audio == 1)
            {
                radiobtn_mute.Checked = true;
            }
        }

        private void AudioOutputEnableChanged()
        {
            int audio;
            m_audioMonitorOutput.GetMonitorEnable(out audio);

            if (audio == 0)
            {
                radiobtn_ProgramAudion.Checked = true;
                groupbox_audioMonitor.Enabled = false;
            }
            else
            {
                radiobtn_monitoraudio.Checked = true;
                groupbox_audioMonitor.Enabled = true;
            }
        }

        private void AudioOutputDimChanged()
        {
            int audio;
            m_audioMonitorOutput.GetDim(out audio);
            if (audio == 1)
            {
                radiobtn_dim.Checked = true;
            }
            else
            {
                radiobtn_on.Checked = true;
            }
        }

        private void AudioOutputGainChanged()
        {
            try
            {
                double audio;
                m_audioMonitorOutput.GetGain(out audio);
                track_monitorgain.Value = Convert.ToInt16(audio);
            }
            catch (OverflowException)
            { 
                track_monitorgain.Value = -60; 
            }
        }

        private void AudioProgramOutLevelNotificationChanged()
        {

        }

        private void AudioProgramOutGainChanged()
        {
            try
            {
                double programoutlevel;
                m_audiomixer.GetProgramOutGain(out programoutlevel);
                programoutlevel = Math.Round(programoutlevel, 2);
                track_programoutgain.Value = Convert.ToInt16(programoutlevel);
                tb_monitor.Text = programoutlevel.ToString();
            }
            catch(OverflowException)
            {
                track_programoutgain.Value = -60;
                tb_monitor.Text = "-inf";
            }

            
        }

        private void AudioProgramOutBalanceChanged()
        {
            
        }

        private void InFadeToBlackChanged()
        {
            int ftb;
            m_mixEffectBlock1.GetFlag(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdInFadeToBlack, out ftb);

            if (ftb == 0)
            {
                btn_FTB.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_FTB.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }
        }

        private void FTBRateChanged()
        {
            long ftbframes;
            m_mixEffectBlock1.GetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdFadeToBlackFramesRemaining, out ftbframes);
            tb_FTBRate.Text = ftbframes.ToString();
        }

        private void DKeyerTieChanged()
        {
            int dkey1;
            int dkey2;

            me1_dkey1.GetTie(out dkey1);
            me1_dkey2.GetTie(out dkey2);

            if (dkey1 == 0)
            {
                btn_me1_dkey1tie.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_me1_dkey1tie.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
            }

            if (dkey2 == 0)
            {
                btn_me1_dkey2tie.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_me1_dkey2tie.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
            }
        }

        private void DKeyerIsAutoTransitioningChanged()
        {
            int dkey1;
            int dkey2;

            me1_dkey1.IsAutoTransitioning(out dkey1);
            me1_dkey2.IsAutoTransitioning(out dkey2);

            if (dkey1 == 0)
            {
                btn_me1_dkey1auto.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_me1_dkey1auto.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }

            if (dkey2 == 0)
            {
                btn_me1_dkey2auto.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_me1_dkey2auto.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }
        }

        private void DKeyerOnAirChanged()
        {
            int dkey1;
            int dkey2;

            me1_dkey1.GetOnAir(out dkey1);
            me1_dkey2.GetOnAir(out dkey2);

            if (dkey1 == 0)
            {
                btn_me1_dkey1air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_me1_dkey1air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }

            if (dkey2 == 0)
            {
                btn_me1_dkey2air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_me1_dkey2air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }
        }

        private void DKeyerFramesRemainingChanged()
        {
            uint dkey1;
            uint dkey2;

            me1_dkey1.GetFramesRemaining(out dkey1);
            me1_dkey2.GetFramesRemaining(out dkey2);
            tb_DKey1Rate.Text = dkey1.ToString();
            tb_DKey2Rate.Text = dkey2.ToString();
        }

        private void PreviewTransitionChanged()
        {
            int previewtrans;
            m_mixEffectBlock1.GetFlag(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewTransition, out previewtrans);
            if (previewtrans == 1)
            {
                btn_prevtrans.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }
            else
            {
                btn_prevtrans.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
        }

        private void TransitionSelectionChanged()
        {
            _BMDSwitcherTransitionSelection transitionselection;
            m_transition.GetTransitionSelection(out transitionselection);

            m_bkgdlayer = false;
            m_key1layer = false;
            m_key2layer = false;
            m_key3layer = false;
            m_key4layer = false;

            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey);
            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey);
            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey);
            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey);
            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey);

            string stringtransitionselection = transitionselection.ToString();
            if (stringtransitionselection == "bmdSwitcherTransitionSelectionBackground" ||
                stringtransitionselection == "bmdSwitcherTransitionSelectionKey1" ||
                stringtransitionselection == "bmdSwitcherTransitionSelectionKey2" ||
                stringtransitionselection == "bmdSwitcherTransitionSelectionKey3" ||
                stringtransitionselection == "bmdSwitcherTransitionSelectionKey4")
            {
                switch (transitionselection)
                {
                    case (_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground):
                        {
                            m_bkgdlayer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1):
                        {
                            m_key1layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2):
                        {
                            m_key2layer = true;
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3):
                        {
                            m_key3layer = true;
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4):
                        {
                            m_key4layer = true;
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                }
            }
            else
            {
                int inttransitionselection = Convert.ToInt16(stringtransitionselection);
                switch (inttransitionselection)
                {
                    case (3):
                        {
                            m_bkgdlayer = true;
                            m_key1layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (5):
                        {
                            m_bkgdlayer = true;
                            m_key2layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (6):
                        {
                            m_key1layer = true;
                            m_key2layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (7):
                        {
                            m_bkgdlayer = true;
                            m_key1layer = true;
                            m_key2layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (9):
                        {
                            m_bkgdlayer = true;
                            m_key3layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (10):
                        {
                            m_key1layer = true;
                            m_key3layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (11):
                        {
                            m_bkgdlayer = true;
                            m_key1layer = true;
                            m_key3layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (12):
                        {
                            m_key2layer = true;
                            m_key3layer = true;
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (13):
                        {
                            m_bkgdlayer = true;
                            m_key2layer = true;
                            m_key3layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (14):
                        {
                            m_key1layer = true;
                            m_key2layer = true;
                            m_key3layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (15):
                        {
                            m_bkgdlayer = true;
                            m_key1layer = true;
                            m_key2layer = true;
                            m_key3layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (17):
                        {
                            m_bkgdlayer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (18):
                        {
                            m_key1layer = true;
                            m_key4layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (19):
                        {
                            m_bkgdlayer = true;
                            m_key1layer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (20):
                        {
                            m_key2layer = true;
                            m_key4layer = true;
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (21):
                        {
                            m_bkgdlayer = true;
                            m_key2layer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (22):
                        {
                            m_key1layer = true;
                            m_key2layer = true;
                            m_key4layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (23):
                        {
                            m_key1layer = true;
                            m_key2layer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (24):
                        {
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (25):
                        {
                            m_bkgdlayer = true;
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (26):
                        {
                            m_key1layer = true;
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (27):
                        {
                            m_bkgdlayer = true;
                            m_key1layer = true;
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (28):
                        {
                            m_key2layer = true;
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (29):
                        {
                            m_bkgdlayer = true;
                            m_key2layer = true;
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (30):
                        {
                            m_key1layer = true;
                            m_key2layer = true;
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                    case (31):
                        {
                            m_bkgdlayer = true;
                            m_key1layer = true;
                            m_key2layer = true;
                            m_key3layer = true;
                            m_key4layer = true;
                            btn_bkgdlayer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key1layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key2layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key3layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            btn_key4layer.BackgroundImage = (System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow);
                            break;
                        }
                }
            }   
        }

        private void InputAuxChanged()
        {
            long Aux1Input;
            long Aux2Input;
            long Aux3Input;

            m_AUX1.GetInputSource(out Aux1Input);
            m_AUX2.GetInputSource(out Aux2Input);
            m_AUX3.GetInputSource(out Aux3Input);

            blackToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            colorBarsToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            programToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            previewToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            blackToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            colorBarsToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            programToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            previewToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            blackToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            hDMI4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            camera4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            colorBarsToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            color2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer1KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            mediaPlayer2KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            programToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            previewToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            cleanFeed2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            switch (Aux1Input)
            {
                case (0):
                    blackToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (1):
                    hDMI1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (2):
                    hDMI2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (3):
                    hDMI3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (4):
                    hDMI4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (5):
                    camera1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (6):
                    camera2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (7):
                    camera3ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (8):
                    camera4ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (9):
                    colorBarsToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (10):
                    color1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (11):
                    color2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (12):
                    mediaPlayer1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (13):
                    mediaPlayer1KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;


                case (14):
                    mediaPlayer2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (15):
                    mediaPlayer2KeyToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (16):
                    programToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (17):
                    previewToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (18):
                    cleanFeed1ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (19):
                    cleanFeed2ToolStripMenuItem.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;
            }

            switch (Aux2Input)
            {
                case (0):
                    blackToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (1):
                    hDMI1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (2):
                    hDMI2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (3):
                    hDMI3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (4):
                    hDMI4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (5):
                    camera1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (6):
                    camera2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (7):
                    camera3ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (8):
                    camera4ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (9):
                    colorBarsToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (10):
                    color1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (11):
                    color2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (12):
                    mediaPlayer1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (13):
                    mediaPlayer1KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;


                case (14):
                    mediaPlayer2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (15):
                    mediaPlayer2KeyToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (16):
                    programToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (17):
                    previewToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (18):
                    cleanFeed1ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (19):
                    cleanFeed2ToolStripMenuItem1.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;
            }

            switch (Aux3Input)
            {
                case (0):
                    blackToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (1):
                    hDMI1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (2):
                    hDMI2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (3):
                    hDMI3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (4):
                    hDMI4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (5):
                    camera1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (6):
                    camera2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (7):
                    camera3ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (8):
                    camera4ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (9):
                    colorBarsToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (10):
                    color1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (11):
                    color2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (12):
                    mediaPlayer1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (13):
                    mediaPlayer1KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;


                case (14):
                    mediaPlayer2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (15):
                    mediaPlayer2KeyToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (16):
                    programToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (17):
                    previewToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (18):
                    cleanFeed1ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (19):
                    cleanFeed2ToolStripMenuItem2.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;
            }
        }

        private void KeyerOnAirChanged()
        {
            int Keyer1OnAir;
            int Keyer2OnAir;
            int Keyer3OnAir;
            int Keyer4OnAir;

            me1_key1.GetOnAir(out Keyer1OnAir);
            me1_key2.GetOnAir(out Keyer2OnAir);
            me1_key3.GetOnAir(out Keyer3OnAir);
            me1_key4.GetOnAir(out Keyer4OnAir);

            if (Keyer1OnAir == 0)
            {
                btn_key1air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_key1air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }

            if (Keyer2OnAir == 0)
            {
                btn_key2air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_key2air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }

            if (Keyer3OnAir == 0)
            {
                btn_key3air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_key3air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }

            if (Keyer4OnAir == 0)
            {
                btn_key4air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
            else
            {
                btn_key4air.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }
        }

        private void ProgramInputChanged()
        {
            long ProgramInput;

            m_mixEffectBlock1.GetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, out ProgramInput);

            btn_blackprog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi3prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi4prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera3prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera4prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_barsprog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_color1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_color2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_media1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_media2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            switch (ProgramInput)
            {
                case (0):
                    btn_blackprog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (1):
                    btn_hdmi1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (2):
                    btn_hdmi2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (3):
                    btn_hdmi3prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (4):
                    btn_hdmi4prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (5):
                    btn_camera1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (6):
                    btn_camera2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (7):
                    btn_camera3prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (8):
                    btn_camera4prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (9):
                    btn_barsprog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (10):
                    btn_color1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (11):
                    btn_color2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (12):
                    btn_media1prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;

                case (14):
                    btn_media2prog.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
                    break;
            }
        }

        private void PreviewInputChanged()
        {
            long PreviewInput;

            m_mixEffectBlock1.GetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, out PreviewInput);

            btn_blackprew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi3prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_hdmi4prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera3prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_camera4prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_barsprew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_color1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_color2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_media1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_media2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            switch (PreviewInput)
            {
                case (0):
                    btn_blackprew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (1):
                    btn_hdmi1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (2):
                    btn_hdmi2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (3):
                    btn_hdmi3prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (4):
                    btn_hdmi4prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (5):
                    btn_camera1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (6):
                    btn_camera2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (7):
                    btn_camera3prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (8):
                    btn_camera4prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (9):
                    btn_barsprew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (10):
                    btn_color1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (11):
                    btn_color2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (12):
                    btn_media1prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;

                case (14):
                    btn_media2prew.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongreen));
                    break;
            }
        }

        private void NextTransitionStyleChanged()
        {
            _BMDSwitcherTransitionStyle NextTransitionStyle;

            m_transition.GetNextTransitionStyle(out NextTransitionStyle);


            btn_dip.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_mix.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_DVE.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_sting.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_wipe.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            switch (NextTransitionStyle)
            {
                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleDip):
                    btn_dip.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleDVE):
                    btn_DVE.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleMix):
                    btn_mix.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleStinger):
                    btn_sting.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleWipe):
                    btn_wipe.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;
            }
        }

        private void TransitionStyleChanged()
        {
            _BMDSwitcherTransitionStyle TransitionStyle;

            m_transition.GetTransitionStyle(out TransitionStyle);


            btn_dip.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_mix.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_DVE.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_sting.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            btn_wipe.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));

            switch (TransitionStyle)
            {
                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleDip):
                    btn_dip.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleDVE):
                    btn_DVE.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleMix):
                    btn_mix.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleStinger):
                    btn_sting.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;

                case (_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleWipe):
                    btn_wipe.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonyellow));
                    break;
            }
        }

        private void SwitcherConnected()
        {
            buttonConnect.Enabled = false;

            // Get the switcher name:
            string switcherName;
            m_switcher.GetString(_BMDSwitcherPropertyId.bmdSwitcherPropertyIdProductName, out switcherName);
            textBoxSwitcherName.Text = switcherName;

            // Install SwitcherMonitor callbacks:
            m_switcher.AddCallback(m_switcherMonitor);

            // We create input monitors for each input. To do this we iterator over all inputs:
            // This will allow us to update the combo boxes when input names change:
            IBMDSwitcherInputIterator inputIterator;
            if (SwitcherAPIHelper.CreateIterator(m_switcher, out inputIterator))
            {
                IBMDSwitcherInput input;
                inputIterator.Next(out input);
                while (input != null)
                {
                    InputMonitor newInputMonitor = new InputMonitor(input);
                    input.AddCallback(newInputMonitor);

                    m_inputMonitors.Add(newInputMonitor);

                    inputIterator.Next(out input);
                }
            }

            // We want to get the first Mix Effect block (ME 1). We create a ME iterator,
            // and then get the first one:
            m_mixEffectBlock1 = null;
            IBMDSwitcherMixEffectBlockIterator meIterator;
            SwitcherAPIHelper.CreateIterator(m_switcher, out meIterator);

            if (meIterator != null)
            {
                meIterator.Next(out m_mixEffectBlock1);
            }

            if (m_mixEffectBlock1 == null)
            {
                MessageBox.Show("Unexpected: Could not get first mix effect block", "Error");
                return;
            }

            // Install MixEffectBlockMonitor callbacks:
            m_mixEffectBlock1.AddCallback(m_mixEffectBlockMonitor);

            m_transition = (BMDSwitcherAPI.IBMDSwitcherTransitionParameters)m_mixEffectBlock1;
            m_transition.AddCallback(m_transitionMonitor);

            IBMDSwitcherKeyIterator keyIterator;
            SwitcherAPIHelper.CreateIterator(m_mixEffectBlock1, out keyIterator);

            if (keyIterator != null)
            {
                keyIterator.Next(out me1_key1);
                keyIterator.Next(out me1_key2);
                keyIterator.Next(out me1_key3);
                keyIterator.Next(out me1_key4);   
            }

            me1_key1.AddCallback(m_keyMonitor);
            me1_key2.AddCallback(m_keyMonitor);
            me1_key3.AddCallback(m_keyMonitor);
            me1_key4.AddCallback(m_keyMonitor);


            if (SwitcherAPIHelper.CreateIterator(m_switcher, out inputIterator))
            {
                IBMDSwitcherInput input;
                inputIterator.Next(out input);
                while (input != null)
                {
                    InputMonitor newInputMonitor = new InputMonitor(input);
                    input.AddCallback(newInputMonitor);
                    m_inputMonitors.Add(newInputMonitor);
                    inputIterator.Next(out input);
                    IntPtr lvPointer;
                    IBMDSwitcherInputIterator lvInputIterator;
                    IBMDSwitcherInput lvInput;
                    string lvPortName;
                    long lvPortType;
                    int lvAUXCount;
                    lvAUXCount = 0;
                    m_switcher.CreateIterator(typeof(IBMDSwitcherInputIterator).GUID, out lvPointer);
                    lvInputIterator = (IBMDSwitcherInputIterator)Marshal.GetObjectForIUnknown(lvPointer);
                    lvInputIterator.Next(out lvInput);
                    while (lvInput != null)
                    {
                        lvInput.GetString(BMDSwitcherAPI._BMDSwitcherInputPropertyId.bmdSwitcherInputPropertyIdLongName, out lvPortName); // bmdSwitcherInputPropertyIdLongName

                        lvInput.GetInt(BMDSwitcherAPI._BMDSwitcherInputPropertyId.bmdSwitcherInputPropertyIdPortType, out lvPortType);

                        if ((_BMDSwitcherPortType)lvPortType == BMDSwitcherAPI._BMDSwitcherPortType.bmdSwitcherPortTypeColorGenerator)
                        {

                        }

                        if ((_BMDSwitcherPortType)lvPortType == BMDSwitcherAPI._BMDSwitcherPortType.bmdSwitcherPortTypeAuxOutput)
                        {
                            lvAUXCount = lvAUXCount + 1;

                            m_inputAux = (IBMDSwitcherInputAux)lvInput;

                            if (lvAUXCount == 1)
                            {
                                m_AUX1 = m_inputAux;
                            }
                            if (lvAUXCount == 2)
                            {
                                m_AUX2 = m_inputAux;
                            }
                            if (lvAUXCount == 3)
                            {
                                m_AUX3 = m_inputAux;
                            }
                        }
                        lvInputIterator.Next(out lvInput);
                    }
                }
            }
            m_AUX1.AddCallback(m_auxMonitor);
            m_AUX2.AddCallback(m_auxMonitor);
            m_AUX3.AddCallback(m_auxMonitor);
            
            IBMDSwitcherDownstreamKeyIterator dkeyiterator;
            dkeyiterator = null;
            SwitcherAPIHelper.CreateIterator(m_switcher, out dkeyiterator);
            if (dkeyiterator != null)
            {
                dkeyiterator.Next(out me1_dkey1);
                dkeyiterator.Next(out me1_dkey2);
            }

            me1_dkey1.AddCallback(m_dkeyMonitor);
            me1_dkey2.AddCallback(m_dkeyMonitor);

            m_audiomixer = (BMDSwitcherAPI.IBMDSwitcherAudioMixer)m_switcher;
            m_audiomixer.AddCallback(m_audioMixerMonitor);

            IBMDSwitcherAudioInputIterator m_audioInputiterator;
            SwitcherAPIHelper.CreateIterator(m_audiomixer, out m_audioInputiterator);

            if (m_audioInputiterator != null)
            {
                m_audioInputiterator.Next(out m_audioInput);
            }

            m_audioInput.AddCallback(m_audioInputMonitor);

            IBMDSwitcherAudioMonitorOutputIterator m_audioOutputIterator;
            SwitcherAPIHelper.CreateIterator(m_audiomixer, out m_audioOutputIterator);

            if (m_audioOutputIterator != null)
            {
                m_audioOutputIterator.Next(out m_audioMonitorOutput);
            }

            m_audioMonitorOutput.AddCallback(m_audioOutputMonitor);

            UpdateTransitionFramesRemaining();
            UpdateSliderPosition();
            ProgramInputChanged();
            PreviewInputChanged();
            NextTransitionStyleChanged();
            TransitionStyleChanged();
            KeyerOnAirChanged();
            InputAuxChanged();
            TransitionSelectionChanged();
            FTBRateChanged();
            DKeyerFramesRemainingChanged();
            DKeyerIsAutoTransitioningChanged();
            DKeyerOnAirChanged();
            DKeyerTieChanged();
            AudioProgramOutGainChanged();
            AudioProgramOutBalanceChanged();
            AudioProgramOutLevelNotificationChanged();
            AudioOutputDimChanged();
            AudioOutputGainChanged();
            AudioOutputEnableChanged();
            AudioOutputMuteChanged();
        }

        private void SwitcherDisconnected()
        {
            buttonConnect.Enabled = true;
            textBoxSwitcherName.Text = "";

            if (m_audioInput != null)
            {
                m_audioInput.RemoveCallback(m_audioInputMonitor);
                m_audioInput = null;
            }

            if (m_audioMonitorOutput != null)
            {
                m_audioMonitorOutput.RemoveCallback(m_audioOutputMonitor);
                m_audioMonitorOutput = null;
            }

            if (m_audiomixer != null)
            {
                 m_audiomixer.RemoveCallback(m_audioMixerMonitor);
                 m_audiomixer = null;
            }

            if (me1_dkey1 != null)
            {
                // Remove callback
                me1_dkey1.RemoveCallback(m_dkeyMonitor);

                // Release reference
                me1_dkey1 = null;
            }

            if (me1_dkey2 != null)
            {
                // Remove callback
                me1_dkey2.RemoveCallback(m_dkeyMonitor);

                // Release reference
                me1_dkey2 = null;
            }

            if (m_AUX1 != null)
            {
                // Remove callback
                m_AUX1.RemoveCallback(m_auxMonitor);

                // Release reference
                m_AUX1 = null;
            }

            if (m_AUX2 != null)
            {
                // Remove callback
                m_AUX2.RemoveCallback(m_auxMonitor);

                // Release reference
                m_AUX2 = null;
            }

            if (m_AUX3 != null)
            {
                // Remove callback
                m_AUX3.RemoveCallback(m_auxMonitor);

                // Release reference
                m_AUX3 = null;
            }

            if (m_inputAux != null)
            {
                // Remove callback
                m_inputAux.RemoveCallback(m_auxMonitor);

                // Release reference
                m_inputAux = null;
            }

            if (me1_key1 != null)
            {
                // Remove callback
                me1_key1.RemoveCallback(m_keyMonitor);

                // Release reference
                me1_key1 = null;
            }
            if (me1_key2 != null)
            {
                // Remove callback
                me1_key2.RemoveCallback(m_keyMonitor);

                // Release reference
                me1_key2 = null;
            }
            if (me1_key3 != null)
            {
                // Remove callback
                me1_key3.RemoveCallback(m_keyMonitor);

                // Release reference
                me1_key3 = null;
            }
            if (me1_key4 != null)
            {
                // Remove callback
                me1_key4.RemoveCallback(m_keyMonitor);

                // Release reference
                me1_key4 = null;
            }

            if (m_transition != null)
            {
                // Remove callback
                m_transition.RemoveCallback(m_transitionMonitor);

                // Release reference
                m_transition = null;
            }
            
            // Remove all input monitors, remove callbacks
            foreach (InputMonitor inputMon in m_inputMonitors)
            {
                inputMon.Input.RemoveCallback(inputMon);
            }
            m_inputMonitors.Clear();

            if (m_mixEffectBlock1 != null)
            {
                // Remove callback
                m_mixEffectBlock1.RemoveCallback(m_mixEffectBlockMonitor);

                // Release reference
                m_mixEffectBlock1 = null;
            }

            if (m_switcher != null)
            {
                // Remove callback:
                m_switcher.RemoveCallback(m_switcherMonitor);

                // release reference:
                m_switcher = null;
            }
        }

        private void UpdateTransitionFramesRemaining()
        {
            long framesRemaining;

            m_mixEffectBlock1.GetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdTransitionFramesRemaining, out framesRemaining);

            textBoxTransFramesRemaining.Text = String.Format("{0}", framesRemaining);
        }

        private void UpdateSliderPosition()
        {
            double transitionPos;

            m_mixEffectBlock1.GetFloat(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdTransitionPosition, out transitionPos);

            m_currentTransitionReachedHalfway = (transitionPos >= 0.50);

            if (m_moveSliderDownwards)
                trackBarTransitionPos.Value = 100 - (int)(transitionPos * 100);
            else
                trackBarTransitionPos.Value = (int)(transitionPos * 100);
        }

        private void OnInTransitionChanged()
        {
            int inTransition;

            m_mixEffectBlock1.GetFlag(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdInTransition, out inTransition);

            if (inTransition == 0)
            {
                // Toggle the starting orientation of slider handle if a transition has passed through halfway
                if (m_currentTransitionReachedHalfway)
                {
                    m_moveSliderDownwards = !m_moveSliderDownwards;
                    UpdateSliderPosition();
                }
                m_currentTransitionReachedHalfway = false;
            }
            if (inTransition == 1)
            {
                buttonAuto.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttonred));
            }
            else
            {
                buttonAuto.BackgroundImage = ((System.Drawing.Image)(SwitcherPanelCSharp.Properties.Resources.buttongrey));
            }
        }

        private void buttonConnect_Click(object sender, EventArgs e)
        {
            _BMDSwitcherConnectToFailure failReason = 0;
            string address = textBoxIP.Text;

            try
            {
                // Note that ConnectTo() can take several seconds to return, both for success or failure,
                // depending upon hostname resolution and network response times, so it may be best to
                // do this in a separate thread to prevent the main GUI thread blocking.
                m_switcherDiscovery.ConnectTo(address, out m_switcher, out failReason);
            }
            catch (COMException)
            {
                // An exception will be thrown if ConnectTo fails. For more information, see failReason.
                switch (failReason)
                {
                    case _BMDSwitcherConnectToFailure.bmdSwitcherConnectToFailureNoResponse:
                        MessageBox.Show("No response from Switcher", "Error");
                        break;
                    case _BMDSwitcherConnectToFailure.bmdSwitcherConnectToFailureIncompatibleFirmware:
                        MessageBox.Show("Switcher has incompatible firmware", "Error");
                        break;
                    default:
                        MessageBox.Show("Connection failed for unknown reason", "Error");
                        break;
                }
                return;
            }

            SwitcherConnected();
        }

        private void buttonAuto_Click(object sender, EventArgs e)
        {
            if (m_mixEffectBlock1 != null)
            {
                m_mixEffectBlock1.PerformAutoTransition();
            }
        }

        private void buttonCut_Click(object sender, EventArgs e)
        {
            if (m_mixEffectBlock1 != null)
            {
                m_mixEffectBlock1.PerformCut();
            }
        }

        private void trackBarTransitionPos_Scroll(object sender, EventArgs e)
        {
            if (m_mixEffectBlock1 != null)
            {
                double position = trackBarTransitionPos.Value / 100.0;
                if (m_moveSliderDownwards)
                    position = (100 - trackBarTransitionPos.Value) / 100.0;

                m_mixEffectBlock1.SetFloat(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdTransitionPosition,
                    position);
            }
        }

        private void btn_blackprog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 0);
        }

        private void btn_hdmi1prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 1);
        }

        private void btn_hdmi2prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 2);
        }

        private void btn_hdmi3prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 3);
        }

        private void btn_hdmi4prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 4);
        }

        private void btn_color1prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 10);
        }

        private void btn_color2prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 11);
        }

        private void btn_media2prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 14);
        }

        private void btn_media1prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 12);
        }

        private void btn_camera4prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 8);
        }

        private void btn_camera3prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 7);
        }

        private void btn_camera2prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 6);
        }

        private void btn_camera1prog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 5);
        }

        private void btn_barsprog_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdProgramInput, 9);
        }

        private void btn_blackprew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 0);
        }

        private void btn_hdmi1prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 1);
        }

        private void btn_hdmi2prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 2);
        }

        private void btn_hdmi3prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 3);
        }

        private void btn_hdmi4prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 4);
        }

        private void btn_camera1prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 5);
        }

        private void btn_camera2prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 6);
        }

        private void btn_camera3prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 7);
        }

        private void btn_camera4prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 8);
        }

        private void btn_barsprew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 9);
        }

        private void btn_color1prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 10);
        }

        private void btn_color2prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 11);
        }

        private void btn_media1prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 12);
        }

        private void btn_media2prew_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.SetInt(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewInput, 14);
        }

        private void btn_mix_Click(object sender, EventArgs e)
        {
            m_transition.SetNextTransitionStyle(_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleMix);
        }

        private void btn_dip_Click(object sender, EventArgs e)
        {
            m_transition.SetNextTransitionStyle(_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleDip);
        }

        private void btn_wipe_Click(object sender, EventArgs e)
        {
            m_transition.SetNextTransitionStyle(_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleWipe);
        }

        private void btn_DVE_Click(object sender, EventArgs e)
        {
            m_transition.SetNextTransitionStyle(_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleDVE);
        }

        private void btn_sting_Click(object sender, EventArgs e)
        {
            m_transition.SetNextTransitionStyle(_BMDSwitcherTransitionStyle.bmdSwitcherTransitionStyleStinger);
        }

        private void btn_key1air_Click(object sender, EventArgs e)
        {
            int OnAir;
            me1_key1.GetOnAir(out OnAir);
            if (OnAir == 1)
            {
                me1_key1.SetOnAir(0);
            }
            else
            {
                me1_key1.SetOnAir(1);
            }
        }

        private void btn_key2air_Click(object sender, EventArgs e)
        {
            int OnAir;
            me1_key2.GetOnAir(out OnAir);
            if (OnAir == 1)
            {
                me1_key2.SetOnAir(0);
            }
            else
            {
                me1_key2.SetOnAir(1);
            }
        }

        private void btn_key3air_Click(object sender, EventArgs e)
        {
            int OnAir;
            me1_key3.GetOnAir(out OnAir);
            if (OnAir == 1)
            {
                me1_key3.SetOnAir(0);
            }
            else
            {
                me1_key3.SetOnAir(1);
            }
        }

        private void btn_key4air_Click(object sender, EventArgs e)
        {
            int OnAir;
            me1_key4.GetOnAir(out OnAir);
            if (OnAir == 1)
            {
                me1_key4.SetOnAir(0);
            }
            else
            {
                me1_key4.SetOnAir(1);
            }
        }

        private void blackToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(0);
        }

        private void hDMI1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(1);
        }

        private void hDMI2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(2);
        }

        private void hDMI3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(3);
        }

        private void hDMI4ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(4);
        }

        private void camera1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(5);
        }

        private void camera2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(6);
        }

        private void camera3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(7);
        }

        private void camera4ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(8);
        }

        private void colorBarsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(9);
        }

        private void color1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(10);
        }

        private void color2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(11);
        }

        private void mediaPlayer1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(12);
        }

        private void mediaPlayer1KeyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(13);
        }

        private void mediaPlayer2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(14);
        }

        private void mediaPlayer2KeyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(15);
        }

        private void programToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(16);
        }

        private void previewToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(17);
        }

        private void cleanFeed1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(18);
        }

        private void cleanFeed2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            m_AUX1.SetInputSource(19);
        }

        private void blackToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(0);
        }

        private void hDMI1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(1);
        }

        private void hDMI2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(2);
        }

        private void hDMI3ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(3);
        }

        private void hDMI4ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(4);
        }

        private void camera1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(5);
        }

        private void camera2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(6);
        }

        private void camera3ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(7);
        }

        private void camera4ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(8);
        }

        private void colorBarsToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(9);
        }

        private void color1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(10);
        }

        private void color2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(11);
        }

        private void mediaPlayer1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(12);
        }

        private void mediaPlayer1KeyToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(13);
        }

        private void mediaPlayer2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(14);
        }

        private void mediaPlayer2KeyToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(15);
        }

        private void programToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(16);
        }

        private void previewToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(17);
        }

        private void cleanFeed1ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(18);
        }

        private void cleanFeed2ToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            m_AUX2.SetInputSource(19);
        }

        private void blackToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(0);
        }

        private void hDMI1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(1);
        }

        private void hDMI2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(2);
        }

        private void hDMI3ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(3);
        }

        private void hDMI4ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(4);
        }

        private void camera1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(5);
        }

        private void camera2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(6);
        }

        private void camera3ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(7);
        }

        private void camera4ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(8);
        }

        private void colorBarsToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(9);
        }

        private void color1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(10);
        }

        private void color2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(11);
        }

        private void mediaPlayer1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(12);
        }

        private void mediaPlayer1KeyToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(13);
        }

        private void mediaPlayer2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(14);
        }

        private void mediaPlayer2KeyToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(15);
        }

        private void programToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(16);
        }

        private void previewToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(17);
        }

        private void cleanFeed1ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(18);
        }

        private void cleanFeed2ToolStripMenuItem2_Click(object sender, EventArgs e)
        {
            m_AUX3.SetInputSource(19);
        }

        private void btn_bkgdlayer_Click(object sender, EventArgs e)
        {
            _BMDSwitcherTransitionSelection transitionselection;
            m_transition.GetNextTransitionSelection(out transitionselection);
            string stringtransitionselection = transitionselection.ToString();


            if (stringtransitionselection == "bmdSwitcherTransitionSelectionBackground")
            {
                /*if (m_bkgdlayer)
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + inttransitionselection);
                }
                else
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + inttransitionselection - 2);
                }*/
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey1")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + 2);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey2")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + 4);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey3")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + 8);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey4")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + 16);
            }
            else
            {
                int inttransitionselection = Convert.ToInt16(stringtransitionselection);
                if (m_bkgdlayer == true)
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + inttransitionselection - 2);
                }
                else
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionBackground + inttransitionselection);
                }
            }
        }

        private void btn_key1layer_Click(object sender, EventArgs e)
        {
            _BMDSwitcherTransitionSelection transitionselection;
            m_transition.GetNextTransitionSelection(out transitionselection);
            string stringtransitionselection = transitionselection.ToString();


            if (stringtransitionselection == "bmdSwitcherTransitionSelectionBackground")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1 + 1);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey1")
            {/*
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1 + 2);
            */}
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey2")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1 + 4);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey3")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1 + 8);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey4")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1 + 16);
            }
            else
            {
                int inttransitionselection = Convert.ToInt16(stringtransitionselection);
                if (m_key1layer == true)
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1 + inttransitionselection - 4);
                }
                else
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey1 + inttransitionselection);
                }
            }
        }

        private void btn_key2layer_Click(object sender, EventArgs e)
        {
            _BMDSwitcherTransitionSelection transitionselection;
            m_transition.GetNextTransitionSelection(out transitionselection);
            string stringtransitionselection = transitionselection.ToString();


            if (stringtransitionselection == "bmdSwitcherTransitionSelectionBackground")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2 + 1);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey1")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2 + 2);
            
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey2")
            {/*
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2 + 4);
           */ }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey3")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2 + 8);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey4")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2 + 16);
            }
            else
            {
                int inttransitionselection = Convert.ToInt16(stringtransitionselection);
                if (m_key2layer == true)
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2 + inttransitionselection - 8);
                }
                else
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey2 + inttransitionselection);
                }
            }
        }

        private void btn_key3layer_Click(object sender, EventArgs e)
        {
            _BMDSwitcherTransitionSelection transitionselection;
            m_transition.GetNextTransitionSelection(out transitionselection);
            string stringtransitionselection = transitionselection.ToString();


            if (stringtransitionselection == "bmdSwitcherTransitionSelectionBackground")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3 + 1);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey1")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3 + 2);
            
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey2")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3 + 4);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey3")
            {/*
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3 + 8);
            */}
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey4")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3 + 16);
            }
            else
            {
                int inttransitionselection = Convert.ToInt16(stringtransitionselection);
                if (m_key3layer == true)
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3 + inttransitionselection - 16);
                }
                else
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey3 + inttransitionselection);
                }
            }
        }

        private void btn_key4layer_Click(object sender, EventArgs e)
        {
            _BMDSwitcherTransitionSelection transitionselection;
            m_transition.GetNextTransitionSelection(out transitionselection);
            string stringtransitionselection = transitionselection.ToString();


            if (stringtransitionselection == "bmdSwitcherTransitionSelectionBackground")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4 + 1);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey1")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4 + 2);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey2")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4 + 4);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey3")
            {
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4 + 8);
            }
            else if (stringtransitionselection == "bmdSwitcherTransitionSelectionKey4")
            {/*
                m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4 + 16);
           */ }
            else
            {
                int inttransitionselection = Convert.ToInt16(stringtransitionselection);
                if (m_key4layer == true)
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4 + inttransitionselection - 32);
                }
                else
                {
                    m_transition.SetNextTransitionSelection(_BMDSwitcherTransitionSelection.bmdSwitcherTransitionSelectionKey4 + inttransitionselection);
                }
            }
        }

        private void btn_prevtrans_Click(object sender, EventArgs e)
        {
            int previewtrans;
            m_mixEffectBlock1.GetFlag(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewTransition, out previewtrans);
            if (previewtrans == 1)
            {
                m_mixEffectBlock1.SetFlag(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewTransition, 0);
            }
            else
            {
                m_mixEffectBlock1.SetFlag(_BMDSwitcherMixEffectBlockPropertyId.bmdSwitcherMixEffectBlockPropertyIdPreviewTransition, 1);
            }
        }

        private void btn_me1_dkey1tie_Click(object sender, EventArgs e)
        {
            int dkey;

            me1_dkey1.GetTie(out dkey);

            if (dkey == 1)
            {
                me1_dkey1.SetTie(0);
            }
            else
            {
                me1_dkey1.SetTie(1);
            }
        }

        private void btn_me1_dkey2tie_Click(object sender, EventArgs e)
        {
            int dkey;

            me1_dkey2.GetTie(out dkey);

            if (dkey == 1)
            {
                me1_dkey2.SetTie(0);
            }
            else
            {
                me1_dkey2.SetTie(1);
            }
        }

        private void btn_me1_dkey1air_Click(object sender, EventArgs e)
        {
            int dkey;

            me1_dkey1.GetOnAir(out dkey);

            if (dkey == 1)
            {
                me1_dkey1.SetOnAir(0);
            }
            else
            {
                me1_dkey1.SetOnAir(1);
            }
        }

        private void btn_me1_dkey2air_Click(object sender, EventArgs e)
        {
            int dkey;

            me1_dkey2.GetOnAir(out dkey);

            if (dkey == 1)
            {
                me1_dkey2.SetOnAir(0);
            }
            else
            {
                me1_dkey2.SetOnAir(1);
            }
        }

        private void btn_me1_dkey1auto_Click(object sender, EventArgs e)
        {
            me1_dkey1.PerformAutoTransition();
        }

        private void btn_me1_dkey2auto_Click(object sender, EventArgs e)
        {
            me1_dkey2.PerformAutoTransition();
        }

        private void btn_FTB_Click(object sender, EventArgs e)
        {
            m_mixEffectBlock1.PerformFadeToBlack();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            int audio;
            m_audioMonitorOutput.GetDim(out audio);

            if (audio == 0)
            {
                m_audioMonitorOutput.SetDim(1);
            }
            else
            {
                m_audioMonitorOutput.SetDim(0);
            }
        }

        private void trackBar1_Scroll(object sender, EventArgs e)
        {
            m_audiomixer.SetProgramOutGain(track_programoutgain.Value);
        }

        private void radiobtn_ProgramAudion_CheckedChanged(object sender, EventArgs e)
        {
            if (radiobtn_ProgramAudion.Checked == true)
            {
                m_audioMonitorOutput.SetMonitorEnable(0);
            }
        }

        private void radiobtn_monitoraudio_CheckedChanged(object sender, EventArgs e)
        {
            if (radiobtn_monitoraudio.Checked == true)
            {
                m_audioMonitorOutput.SetMonitorEnable(1);
            }
        }

        private void radiobtn_on_CheckedChanged(object sender, EventArgs e)
        {
            if (radiobtn_on.Checked == true)
            {
                m_audioMonitorOutput.SetDim(0);
                m_audioMonitorOutput.SetMute(0);
            }
        }

        private void radiobtn_dim_CheckedChanged(object sender, EventArgs e)
        {
            if (radiobtn_dim.Checked == true)
            {
                m_audioMonitorOutput.SetDim(1);
                m_audioMonitorOutput.SetMute(0);
            }
        }

        private void radiobtn_mute_CheckedChanged(object sender, EventArgs e)
        {
            if (radiobtn_mute.Checked == true)
            {
                m_audioMonitorOutput.SetMute(1);
            }
        }

        private void track_monitordimlevel_Scroll(object sender, EventArgs e)
        {
            m_audioMonitorOutput.SetGain(track_monitorgain.Value);
        }

        private void closeToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();  
        }
    }
}